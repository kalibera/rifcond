
R Under development (unstable) (2018-10-04 r75396) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "methylPipe"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('methylPipe')
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    Filter, Find, Map, Position, Reduce, anyDuplicated, append,
    as.data.frame, basename, cbind, colMeans, colSums, colnames,
    dirname, do.call, duplicated, eval, evalq, get, grep, grepl,
    intersect, is.unsorted, lapply, mapply, match, mget, order, paste,
    pmax, pmax.int, pmin, pmin.int, rank, rbind, rowMeans, rowSums,
    rownames, sapply, setdiff, sort, table, tapply, union, unique,
    unsplit, which, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges
Loading required package: GenomeInfoDb
Loading required package: SummarizedExperiment
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: DelayedArray
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following objects are masked from ‘package:Biobase’:

    anyMissing, rowMedians

Loading required package: BiocParallel

Attaching package: ‘DelayedArray’

The following objects are masked from ‘package:matrixStats’:

    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges

The following objects are masked from ‘package:base’:

    aperm, apply

Loading required package: Rsamtools
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:DelayedArray’:

    type

The following object is masked from ‘package:base’:

    strsplit

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("BSdata-class")
> ### * BSdata-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: BSdata-class
> ### Title: Class "BSdata"
> ### Aliases: BSdata-class BSdata show,BSdata-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> require(BSgenome.Hsapiens.UCSC.hg18)
Loading required package: BSgenome.Hsapiens.UCSC.hg18
Loading required package: BSgenome
Loading required package: rtracklayer
> H1data <- system.file('extdata', 'H1_chr20_CG_10k_tabix_out.txt.gz', package='methylPipe')
> uncov_GR <- GRanges(Rle('chr20'), IRanges(c(14350,69251,84185), c(18349,73250,88184)))
> H1.db <- BSdata(file=H1data, uncov=uncov_GR, org=Hsapiens)
> 
> 
> 
> cleanEx()

detaching 'package:BSgenome.Hsapiens.UCSC.hg18', 'package:BSgenome',
  'package:rtracklayer'

> nameEx("BSdataSet-class")
> ### * BSdataSet-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: BSdataSet-class
> ### Title: Class "BSdataSet"
> ### Aliases: BSdataSet-class BSdataSet length,BSdataSet-method
> ###   show,BSdataSet-method [[<-,BSdataSet,ANY,ANY-method
> ###   [[,BSdataSet,ANY,ANY-method [,BSdataSet,ANY,ANY-method
> ###   $,BSdataSet-method $,BSdataSet
> ### Keywords: classes
> 
> ### ** Examples
> 
> require(BSgenome.Hsapiens.UCSC.hg18)
Loading required package: BSgenome.Hsapiens.UCSC.hg18
Loading required package: BSgenome
Loading required package: rtracklayer
> uncov_GR <- GRanges(Rle('chr20'), IRanges(c(14350,69251,84185), c(18349,73250,88184)))
> H1data <- system.file('extdata', 'H1_chr20_CG_10k_tabix_out.txt.gz', package='methylPipe')
> H1.db <- BSdata(file=H1data, uncov=uncov_GR, org=Hsapiens)
> IMR90data <- system.file('extdata', 'IMR90_chr20_CG_10k_tabix_out.txt.gz', package='methylPipe')
> IMR90.db <- BSdata(file=IMR90data, uncov=uncov_GR, org=Hsapiens)
> H1.IMR90.set <- BSdataSet(org=Hsapiens, group=c("C","E"), IMR90=IMR90.db, H1=H1.db)
> 
> 
> 
> cleanEx()

detaching 'package:BSgenome.Hsapiens.UCSC.hg18', 'package:BSgenome',
  'package:rtracklayer'

> nameEx("BSprepare")
> ### * BSprepare
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: BSprepare
> ### Title: Preparing tabular data to be used to feed a BSdata object
> ### Aliases: BSprepare
> 
> ### ** Examples
> 
> #BSprepare("/path-to-input/","/path-to-output/", tabix="/path-to-tabix/tabix-0.2.6")
> 
> 
> 
> cleanEx()
> nameEx("GEcollection-class")
> ### * GEcollection-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: GEcollection-class
> ### Title: Class "GEcollection"
> ### Aliases: GEcollection-class GEcollection show,GEcollection-method
> ###   chr,GEcollection-method binC,GEcollection-method
> ###   binmC,GEcollection-method binrC,GEcollection-method
> ###   nbins,GEcollection-method length,GEcollection-method
> ###   binscore,GEcollection-method binscore<-,GEcollection-method chr binC
> ###   binmC binrC nbins binscore length binscore<-
> ### Keywords: classes
> 
> ### ** Examples
> 
> require(BSgenome.Hsapiens.UCSC.hg18)
Loading required package: BSgenome.Hsapiens.UCSC.hg18
Loading required package: BSgenome
Loading required package: rtracklayer
> uncov_GR <- GRanges(Rle('chr20'), IRanges(c(14350,69251,84185), c(18349,73250,88184)))
> H1data <- system.file('extdata', 'H1_chr20_CG_10k_tabix_out.txt.gz', package='methylPipe')
> H1.db <- BSdata(file=H1data, uncov=uncov_GR, org=Hsapiens)
> gr_file <- system.file('extdata', 'GR_chr20.Rdata', package='methylPipe')
> load(gr_file)
> gec.H1 <- profileDNAmetBin(GenoRanges=GR_chr20, Sample=H1.db, mcCLASS='mCG')
 ----------- FAILURE REPORT -------------- 
 --- srcref --- 
 at /var/scratch2/tomas/tmp/RtmpvSXcDO/R.INSTALLf28214333763/methylPipe/R/Allfunctions.R#635: 
 --- package (from environment) --- 
methylPipe
 --- call from context --- 
getCposDensity(GenoRanges, Cpos = Cpos, nbins = Nbins)
 --- call from argument --- 
if (is.na(Cpos[[i]])) Cpos[[i]] <- rep(0, nbins) else Cpos[[i]] <- sapply(Cpos[[i]], 
    length)/widths
 --- R stacktrace ---
where 1 at /var/scratch2/tomas/tmp/RtmpvSXcDO/R.INSTALLf28214333763/methylPipe/R/Allfunctions.R#713: getCposDensity(GenoRanges, Cpos = Cpos, nbins = Nbins)
where 2: withCallingHandlers(expr, warning = function(w) invokeRestart("muffleWarning"))
where 3 at /var/scratch2/tomas/tmp/RtmpvSXcDO/R.INSTALLf28214333763/methylPipe/R/Allfunctions.R#713: suppressWarnings(CposD <- getCposDensity(GenoRanges, Cpos = Cpos, 
    nbins = Nbins))
where 4: profileDNAmetBin(GenoRanges = GR_chr20, Sample = H1.db, mcCLASS = "mCG")

 --- value of length: 2 type: logical ---
[1] FALSE FALSE
 --- function from context --- 
function(GenoRanges, Cpos, nbins) {
    allwidths <- width(GenoRanges)
    Nbins <- nbins
    for(i in 1:length(Cpos)) {
        widths <- rep(round(allwidths[i]/Nbins), Nbins)
        if(is.na(Cpos[[i]]))
          Cpos[[i]] <- rep(0,nbins)
        else
          Cpos[[i]] <- sapply(Cpos[[i]], length)/widths
    }
    return(Cpos)
}
<bytecode: 0x42b0d1a8>
<environment: namespace:methylPipe>
 --- function search by body ---
Function getCposDensity in namespace methylPipe has this body.
 ----------- END OF FAILURE REPORT -------------- 
Fatal error: the condition has length > 1
