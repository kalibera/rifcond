
R Under development (unstable) (2018-01-22 r74151) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "CDF.PSIdekick"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('CDF.PSIdekick')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("Abbrev")
> ### * Abbrev
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Abbrev
> ### Title: Tranforms long numbers into short strings.
> ### Aliases: Abbrev
> 
> ### ** Examples
> 
> Abbrev(1700000)
[1] "1.7m"
> 
> 
> 
> cleanEx()
> nameEx("CDFtest")
> ### * CDFtest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: CDFtest
> ### Title: Comprehensively evaluate and visualize the utility of
> ###   CDF-generating implementations.
> ### Aliases: CDFtest
> 
> ### ** Examples
> 
> CDFtest( Visualization = TRUE,OutputDirectory = 0, functlist = c(functionH),
+ Fnameslist = c("H"), epslist  = c(.1, .01), datalist = list(),
+ Dnameslist = c(), synthsets= list(list("wage", 100000, "uniform"), 
+  list("wage",100000,"sparse"), list("wage",100000,"bimodal")),
+  range    = c(1,500000),gran =1000,granlist =c(2500,1250,1000,500), 
+  samplesize = 0,nlist = c(100,1000,10000,100000,1000000),
+  cdfstep  =0, reps = 5,  ExtraTests_CDF = list(),ExtraTests_PDF = list(),
+  setseed = c(-100),
+  comments = "x",SmoothAll = FALSE,EmpiricBounds = FALSE,
+  AnalyticBounds = FALSE,AnalyticProbSleeve = FALSE,
+  SuppressRealCDF = FALSE,SuppressDPCDF = FALSE,SuppressLegends = FALSE)
[1] "No output directory specified; plotting to R temp directory:"
[1] "/var/scratch2/tomas/tmp/RtmpDxBzxh"
[1] "Using Visualization Mode"
[1] "cdfstep set to 0, using maximum resolution (cdfstep = gran)"
[1] "samplesize set to 0, using entire dataset"
[1] "this is datalist 1"
[1] "this is epslist 1"
[1] "this is functlist 1"
[1] "this is epslist 2"
[1] "this is functlist 1"
[1] "this is datalist 2"
[1] "this is epslist 1"
[1] "this is functlist 1"
[1] "this is epslist 2"
[1] "this is functlist 1"
[1] "this is datalist 3"
[1] "this is epslist 1"
[1] "this is functlist 1"
[1] "this is epslist 2"
[1] "this is functlist 1"
$allscores
$allscores$MaxError_CDF
[1] 0.07786289 0.06135143 0.04398708 0.06250192 0.06842580

$allscores$MaxErrorAt_CDF
[1] 228001  42001 316001 236001 186001

$allscores$diffat25
[1] 0.0126524347 0.0003152506 0.0288878736 0.0042660432 0.0143176675

$allscores$diffatMedian
[1] 0.006450348 0.004585556 0.006916831 0.003091730 0.014485955

$allscores$diffat75
[1] 0.002210151 0.003318993 0.002392175 0.013969757 0.005852652

$allscores$horzdiffat25
[1] 5000    0 3000 5500 2500

$allscores$horzdiffatMed
[1] 22000  5000 10500 18000 33000

$allscores$horzdiffat75
[1] 3000 3000 1000 3000    0

$allscores$Medians
[1] 245001 203001 187001 188001 243001

$allscores$MAE_CDF
[1] 0.01856597 0.01401250 0.01121058 0.01727795 0.01554978

$allscores$MSE
[1] 0.0005862892 0.0003180596 0.0001978422 0.0004510485 0.0003975515

$allscores$DerivScore
[1] 0.013745433 0.008880737 0.007793805 0.011658995 0.010590216

$allscores$MaxError_PDF
[1] 0.059805 0.054705 0.043000 0.046480 0.045135

$allscores$MaxErrorAt_PDF
[1] 148001 159001  33001  23001 281001

$allscores$MAE_PDF
[1] 0.00559848 0.00616470 0.00562100 0.00557874 0.00601366

$allscores$MSE_PDF
[1] 8.215177e-05 9.619473e-05 8.229213e-05 7.866293e-05 9.072221e-05

$allscores$MeanDiff
[1] -510850.8 -585347.1 -493035.8 -494623.8 -541131.0

$allscores$ModeDiff
[1] 157000 146000 272000 282000  24000

$allscores$StdDiff
[1] -740994.5 -904177.5 -701761.4 -719578.9 -817100.1

$allscores$VarDiff
[1] -7.059702e+11 -1.008987e+12 -6.410594e+11 -6.701568e+11 -8.406646e+11

$allscores$SkewDiff
[1] -6.115360 -6.236000 -6.075141 -6.110897 -6.188594

$allscores$KurtDiff
[1] 1.756496e-13 1.764779e-13 1.753721e-13 1.755030e-13 1.760905e-13


$seed
[1]  98 441 988 853 180 635

$means
   stat seed           dataset epsilon functionName      n domainSize minValue
1 means   98 wage.100k.uniform    0.10            H 100000        500        1
2 means  441 wage.100k.uniform    0.01            H 100000        500        1
3 means  988  wage 100k sparse    0.10            H 110000        500        1
4 means  853  wage 100k sparse    0.01            H 110000        500        1
5 means  180 wage.100k.bimodal    0.10            H 200000        500        1
6 means  635 wage.100k.bimodal    0.01            H 200000        500        1
  maxValue MaxError_CDF MaxErrorAt_CDF diffat25 diffatMedian diffat75
1    5e+05        0.012         230001    0.004        0.002    0.002
2    5e+05        0.131         222601    0.015        0.014    0.015
3    5e+05        0.103          49001    0.002        0.002    0.003
4    5e+05        0.146         131201    0.035        0.014    0.007
5    5e+05        0.010         244401    0.001        0.001    0.001
6    5e+05        0.063         201601    0.012        0.007    0.006
  horzdiffat25 horzdiffatMed horzdiffat75 Medians MAE_CDF   MSE DerivScore
1         2000          1200         1200  248601   0.003 0.000      0.002
2         6600          6300         5000  245801   0.029 0.001      0.020
3         1000          1000         1000  108201   0.004 0.000      0.004
4         2200          6200         4700  121201   0.030 0.002      0.020
5         1000          5600         1000  195201   0.003 0.000      0.002
6         3200         17700         2000  213201   0.015 0.000      0.011
  MaxError_PDF MaxErrorAt_PDF MAE_PDF MSE_PDF    MeanDiff   ModeDiff
1        0.011         176201   0.002       0   -38632.95   73433.14
2        0.108         225601   0.011       0 -1143099.78   24033.14
3        0.101          50001   0.004       0  -100259.02    1000.00
4        0.123         134801   0.011       0 -1055645.32 -136600.00
5        0.005         190801   0.001       0   -31751.78  105050.00
6        0.050         128801   0.006       0  -524997.71  176200.00
      StdDiff       VarDiff SkewDiff KurtDiff
1   -15907.47 -4.861717e+09    0.647        0
2 -2584307.83 -7.557174e+12   -4.998        0
3   -68391.23 -1.829569e+10    0.185        0
4 -2150774.81 -5.059772e+12   -2.521        0
5   -19146.40 -4.422293e+09   -0.367        0
6  -776722.49 -7.733675e+11   -6.145        0

$medians
     stat seed           dataset epsilon functionName      n domainSize
1 medians   98 wage.100k.uniform    0.10            H 100000        500
2 medians  441 wage.100k.uniform    0.01            H 100000        500
3 medians  988  wage 100k sparse    0.10            H 110000        500
4 medians  853  wage 100k sparse    0.01            H 110000        500
5 medians  180 wage.100k.bimodal    0.10            H 200000        500
6 medians  635 wage.100k.bimodal    0.01            H 200000        500
  minValue maxValue MaxError_CDF MaxErrorAt_CDF diffat25 diffatMedian diffat75
1        1    5e+05        0.012         272001    0.004        0.002    0.003
2        1    5e+05        0.133          99001    0.017        0.013    0.015
3        1    5e+05        0.103          49001    0.001        0.002    0.003
4        1    5e+05        0.138         100001    0.039        0.016    0.005
5        1    5e+05        0.010         274001    0.001        0.001    0.002
6        1    5e+05        0.063         228001    0.013        0.006    0.003
  horzdiffat25 horzdiffatMed horzdiffat75 Medians MAE_CDF   MSE DerivScore
1         3000          1000         1000  249001   0.003 0.000      0.002
2         6000          5000         4500  239001   0.030 0.001      0.018
3         1000          1000         1000  109001   0.004 0.000      0.004
4         1000          5500         3500  120001   0.031 0.001      0.020
5         1000          6000         1000  192001   0.003 0.000      0.002
6         3000         18000         3000  203001   0.016 0.000      0.011
  MaxError_PDF MaxErrorAt_PDF MAE_PDF MSE_PDF    MeanDiff   ModeDiff
1        0.011         170001   0.002       0   -37088.15   79633.14
2        0.092         207001   0.011       0 -1123476.56   42633.14
3        0.101          50001   0.004       0   -98535.23    1000.00
4        0.116         143001   0.011       0 -1065995.13 -109000.00
5        0.005         259001   0.001       0   -31268.99   98250.00
6        0.046         148001   0.006       0  -510850.85  157000.00
      StdDiff       VarDiff SkewDiff KurtDiff
1   -14549.73 -4.411832e+09    0.699        0
2 -2535455.87 -7.160458e+12   -5.001        0
3   -67480.90 -1.797046e+10    0.200        0
4 -2173005.13 -5.153996e+12   -2.522        0
5   -19007.09 -4.385813e+09   -0.472        0
6  -740994.46 -7.059702e+11   -6.115        0

$permetric
$permetric[[1]]
$permetric[[1]][[1]]
   AAA$metric AAA$metric  AAA$metric
1 0.012401450 0.09960088 0.007504151
2 0.009485842 0.10262101 0.011937752
3 0.014153824 0.10578171 0.010094446
4 0.012307876 0.10292236 0.009805242
5 0.012902419 0.10193700 0.011011088

$permetric[[1]][[2]]
  AAA$metric AAA$metric AAA$metric
1  0.1221474  0.1382512 0.07786289
2  0.1333960  0.1310842 0.06135143
3  0.1431797  0.1741436 0.04398708
4  0.1393467  0.1379525 0.06250192
5  0.1163855  0.1470398 0.06842580


$permetric[[2]]
$permetric[[2]][[1]]
  AAA$metric AAA$metric AAA$metric
1      76001      49001      92001
2     272001      49001     274001
3     396001      49001     280001
4      14001      49001     272001
5     392001      49001     304001

$permetric[[2]][[2]]
  AAA$metric AAA$metric AAA$metric
1      99001     100001     228001
2     478001      49001      42001
3     426001     159001     316001
4      14001     299001     236001
5      96001      49001     186001


$permetric[[3]]
$permetric[[3]][[1]]
    AAA$metric   AAA$metric   AAA$metric
1 0.0001999746 0.0022173068 5.472040e-04
2 0.0005695459 0.0008028253 7.406176e-04
3 0.0043678429 0.0039635298 6.813318e-05
4 0.0060863702 0.0011041741 3.046668e-04
5 0.0079053396 0.0001188163 2.543812e-03

$permetric[[3]][[2]]
   AAA$metric AAA$metric   AAA$metric
1 0.009375235 0.01522341 0.0126524347
2 0.016502066 0.04758534 0.0003152506
3 0.009788565 0.02585813 0.0288878736
4 0.019196314 0.03914081 0.0042660432
5 0.019025369 0.04522158 0.0143176675


$permetric[[4]]
$permetric[[4]][[1]]
    AAA$metric   AAA$metric   AAA$metric
1 0.0012010151 4.301588e-05 0.0008422197
2 0.0019953809 2.167674e-03 0.0010735567
3 0.0001416524 6.178316e-04 0.0007137549
4 0.0020986591 6.118168e-03 0.0013819108
5 0.0028179260 2.225051e-03 0.0007643308

$permetric[[4]][[2]]
   AAA$metric  AAA$metric  AAA$metric
1 0.007205564 0.019489698 0.006450348
2 0.010455951 0.016212788 0.004585556
3 0.018655964 0.019656584 0.006916831
4 0.012690570 0.012566303 0.003091730
5 0.021950887 0.002347585 0.014485955


$permetric[[5]]
$permetric[[5]][[1]]
    AAA$metric  AAA$metric   AAA$metric
1 5.020481e-05 0.005825924 0.0000883513
2 2.857696e-03 0.003602335 0.0021318574
3 2.749926e-03 0.003379639 0.0022215331
4 3.342365e-03 0.002148666 0.0005975909
5 2.084328e-03 0.001792072 0.0017724291

$permetric[[5]][[2]]
   AAA$metric  AAA$metric  AAA$metric
1 0.022909241 0.004855200 0.002210151
2 0.014519919 0.014187192 0.003318993
3 0.004948945 0.010356612 0.002392175
4 0.021995651 0.001528026 0.013969757
5 0.009650690 0.003646882 0.005852652


$permetric[[6]]
$permetric[[6]][[1]]
  AAA$metric AAA$metric AAA$metric
1          0       1000       1000
2       1000       1000       1000
3       3000       1000       1000
4       3000       1000       1000
5       3000       1000       1000

$permetric[[6]][[2]]
  AAA$metric AAA$metric AAA$metric
1       6000       1000       5000
2       5000       6000          0
3       4000       1000       3000
4      10000       2000       5500
5       8000       1000       2500


$permetric[[7]]
$permetric[[7]][[1]]
  AAA$metric AAA$metric AAA$metric
1       1000       1000       6000
2       1000       1000       8500
3       1000       1000       3500
4       2000       1000          0
5       1000       1000      10000

$permetric[[7]][[2]]
  AAA$metric AAA$metric AAA$metric
1          0      15000      22000
2       5000       2000       5000
3       7500       5500      10500
4      17000       3000      18000
5       2000       5500      33000


$permetric[[8]]
$permetric[[8]][[1]]
  AAA$metric AAA$metric AAA$metric
1       1000       1000       1000
2       1000       1000       1000
3       2000       1000       1000
4          0       1000       1000
5       2000       1000       1000

$permetric[[8]][[2]]
  AAA$metric AAA$metric AAA$metric
1       4500      13000       3000
2        500       1000       3000
3       8000       4000       1000
4       4000       3500       3000
5       8000       2000          0


$permetric[[9]]
$permetric[[9]][[1]]
  AAA$metric AAA$metric AAA$metric
1     247001     113001     211001
2     249001     114001     191001
3     248001     109001     192001
4     249001     105001     199001
5     250001     100001     183001

$permetric[[9]][[2]]
  AAA$metric AAA$metric AAA$metric
1     271001     132001     245001
2     269001     112001     203001
3     237001     118001     187001
4     213001     124001     188001
5     239001     120001     243001


$permetric[[10]]
$permetric[[10]][[1]]
   AAA$metric  AAA$metric  AAA$metric
1 0.002444239 0.004519602 0.002308118
2 0.002776660 0.004451568 0.003273817
3 0.003889196 0.004307074 0.002331218
4 0.002748260 0.004115304 0.002746497
5 0.003686805 0.004059193 0.002872144

$permetric[[10]][[2]]
  AAA$metric AAA$metric AAA$metric
1 0.02568231 0.03058107 0.01856597
2 0.02968738 0.02638580 0.01401250
3 0.03039602 0.03582971 0.01121058
4 0.03362580 0.02597373 0.01727795
5 0.02436960 0.03133379 0.01554978


$permetric[[11]]
$permetric[[11]][[1]]
    AAA$metric   AAA$metric   AAA$metric
1 1.000564e-05 9.901337e-05 8.324998e-06
2 1.160740e-05 1.010377e-04 1.616698e-05
3 2.503391e-05 9.953111e-05 9.373178e-06
4 1.219092e-05 1.013850e-04 1.204651e-05
5 2.156169e-05 1.047111e-04 1.373235e-05

$permetric[[11]][[2]]
    AAA$metric  AAA$metric   AAA$metric
1 0.0011497111 0.001675980 0.0005862892
2 0.0014418825 0.001184736 0.0003180596
3 0.0015428339 0.002400291 0.0001978422
4 0.0017322328 0.001151740 0.0004510485
5 0.0009838014 0.001428860 0.0003975515


$permetric[[12]]
$permetric[[12]][[1]]
   AAA$metric  AAA$metric  AAA$metric
1 0.001716487 0.003531149 0.001455588
2 0.001628209 0.003637871 0.001520323
3 0.002466961 0.003350249 0.001540657
4 0.002029069 0.003510896 0.001760478
5 0.002452844 0.003635100 0.001642454

$permetric[[12]][[2]]
  AAA$metric AAA$metric  AAA$metric
1 0.01797794 0.02217977 0.013745433
2 0.01843917 0.01791194 0.008880737
3 0.02255880 0.02568899 0.007793805
4 0.02345057 0.01494667 0.011658995
5 0.01624155 0.01997988 0.010590216


$permetric[[13]]
$permetric[[13]][[1]]
  AAA$metric AAA$metric AAA$metric
1      0.010  0.1008182   0.006305
2      0.012  0.1018182   0.004375
3      0.010  0.1008182   0.005180
4      0.012  0.1018182   0.005780
5      0.011  0.1008182   0.004760

$permetric[[13]][[2]]
  AAA$metric AAA$metric AAA$metric
1      0.123  0.1060000   0.059805
2      0.087  0.1410000   0.054705
3      0.148  0.1480000   0.043000
4      0.088  0.1018182   0.046480
5      0.092  0.1160000   0.045135


$permetric[[14]]
$permetric[[14]][[1]]
  AAA$metric AAA$metric AAA$metric
1     274001      50001     319001
2      23001      50001     259001
3     170001      50001     280001
4      15001      50001      15001
5     399001      50001      81001

$permetric[[14]][[2]]
  AAA$metric AAA$metric AAA$metric
1     207001     143001     148001
2     141001     283001     159001
3     283001     159001      33001
4      14001      50001      23001
5     483001      39001     281001


$permetric[[15]]
$permetric[[15]][[1]]
  AAA$metric  AAA$metric AAA$metric
1   0.001514 0.004222473 0.00081986
2   0.001608 0.004283564 0.00088730
3   0.001694 0.004170945 0.00079894
4   0.001670 0.004225200 0.00085340
5   0.001592 0.004225200 0.00084714

$permetric[[15]][[2]]
  AAA$metric AAA$metric AAA$metric
1   0.010274 0.01140604 0.00559848
2   0.011838 0.01181520 0.00616470
3   0.012254 0.01134702 0.00562100
4   0.010864 0.01163313 0.00557874
5   0.009954 0.01124658 0.00601366


$permetric[[16]]
$permetric[[16]][[1]]
  AAA$metric   AAA$metric  AAA$metric
1  4.022e-06 0.0001587884 1.38519e-06
2  4.448e-06 0.0001568895 1.56027e-06
3  5.030e-06 0.0001587508 1.25037e-06
4  4.734e-06 0.0001583948 1.44761e-06
5  4.600e-06 0.0001550724 1.41329e-06

$permetric[[16]][[2]]
   AAA$metric   AAA$metric   AAA$metric
1 0.000316202 0.0004292983 8.215177e-05
2 0.000354158 0.0004812321 9.619473e-05
3 0.000469094 0.0004389205 8.229213e-05
4 0.000305540 0.0004370918 7.866293e-05
5 0.000292310 0.0004450714 9.072221e-05


$permetric[[17]]
$permetric[[17]][[1]]
  AAA$metric AAA$metric AAA$metric
1  -37088.15  -95923.23  -33710.99
2  -42338.18 -109685.24  -34054.98
3  -49728.18  -95711.19  -30118.96
4  -28600.12 -101440.23  -31268.99
5  -35410.13  -98535.22  -29604.98

$permetric[[17]][[2]]
  AAA$metric AAA$metric AAA$metric
1   -1098319   -1065995  -510850.8
2   -1261839   -1087452  -585347.1
3   -1259219    -995306  -493035.8
4   -1123477   -1041056  -494623.8
5    -972645   -1088417  -541131.0


$permetric[[18]]
$permetric[[18]][[1]]
  AAA$metric AAA$metric AAA$metric
1  -24366.86       1000     -14000
2  226633.14       1000     200000
3   79633.14       1000      25000
4  234633.14       1000      98250
5 -149366.86       1000     216000

$permetric[[18]][[2]]
  AAA$metric AAA$metric AAA$metric
1   42633.14     -93000     157000
2  108633.14    -233000     146000
3  -33366.86    -109000     272000
4  235633.14    -249000     282000
5 -233366.86       1000      24000


$permetric[[19]]
$permetric[[19]][[1]]
  AAA$metric AAA$metric AAA$metric
1  -14549.73  -67480.90  -20890.52
2  -17074.42  -76756.46  -18863.53
3  -23261.47  -64769.44  -17013.67
4  -12337.14  -68868.99  -19957.16
5  -12314.58  -64080.34  -19007.09

$permetric[[19]][[2]]
  AAA$metric AAA$metric AAA$metric
1   -2339904   -2173005  -740994.5
2   -2968176   -2248339  -904177.5
3   -3012783   -2012175  -701761.4
4   -2535456   -2127177  -719578.9
5   -2065221   -2193178  -817100.1


$permetric[[20]]
$permetric[[20]][[1]]
   AAA$metric   AAA$metric  AAA$metric
1 -4411831980 -17970462961 -4859753584
2 -5220485447 -21152544159 -4349978144
3 -7256090755 -17072769342 -3891923628
4 -3713624445 -18435714289 -4623997745
5 -3706553583 -16846970135 -4385813096

$permetric[[20]][[2]]
     AAA$metric    AAA$metric    AAA$metric
1 -6.150620e+12 -5.153996e+12 -7.059702e+11
2 -9.666907e+12 -5.502051e+12 -1.008987e+12
3 -9.946573e+12 -4.448916e+12 -6.410594e+11
4 -7.160458e+12 -4.947813e+12 -6.701568e+11
5 -4.861314e+12 -5.246086e+12 -8.406646e+11


$permetric[[21]]
$permetric[[21]][[1]]
  AAA$metric AAA$metric AAA$metric
1  0.6990571 0.07361144 -0.4719153
2  0.7409948 0.09868675 -0.1342346
3  0.5229512 0.20398207 -0.1738601
4  0.4249898 0.19996705 -0.5298334
5  0.8460535 0.34716997 -0.5231853

$permetric[[21]][[2]]
  AAA$metric AAA$metric AAA$metric
1  -4.975469  -2.522043  -6.115360
2  -5.020419  -2.528531  -6.236000
3  -5.025740  -2.516204  -6.075141
4  -5.000535  -2.522290  -6.110897
5  -4.966009  -2.517717  -6.188594


$permetric[[22]]
$permetric[[22]][[1]]
    AAA$metric   AAA$metric   AAA$metric
1 1.677703e-14 1.305687e-13 5.396816e-14
2 1.923596e-14 1.379310e-13 4.988984e-14
3 2.479900e-14 1.281774e-13 4.599043e-14
4 1.452362e-14 1.317485e-13 5.211470e-14
5 1.450014e-14 1.275507e-13 5.018524e-14

$permetric[[22]][[2]]
    AAA$metric   AAA$metric   AAA$metric
1 9.567631e-14 2.019866e-13 1.756496e-13
2 9.579394e-14 2.020110e-13 1.764779e-13
3 9.579973e-14 2.019253e-13 1.753721e-13
4 9.572188e-14 2.019705e-13 1.755030e-13
5 9.559073e-14 2.019934e-13 1.760905e-13



> 
> 
> 
> cleanEx()
> nameEx("CDFtestTrack")
> ### * CDFtestTrack
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: CDFtestTrack
> ### Title: Test a single CDF implementation with one set of parameters.
> ### Aliases: CDFtestTrack
> 
> ### ** Examples
> 
> CDFtestTrack(badCDF, eps = .01, cdfstep = 1, data = rexp(10000,.4),
+ range= c(1,10), gran = .1, reps = 20)
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in PDFblank * Domain :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
Warning in Y * Domain :
  longer object length is not a multiple of shorter object length
Warning in est * Domain :
  longer object length is not a multiple of shorter object length
Warning in ((truemean - Domain)^2) * (Y) :
  longer object length is not a multiple of shorter object length
Warning in ((dpmean - Domain)^2) * (est) :
  longer object length is not a multiple of shorter object length
$meanscores
  TheNames MaxError_CDF MaxErrorAt_CDF diffat25 diffatMedian diffat75
1        0       0.6649              1   0.6649       0.4429   0.2002
  horzdiffat25 horzdiffatMed horzdiffat75 Medians MAE_CDF        MSE DerivScore
1            0           0.1          0.3       1 0.19838 0.08008855  0.2366023
  MaxError_PDF MaxErrorAt_PDF MAE_PDF    MSE_PDF MeanDiff ModeDiff   StdDiff
1       0.6649              1 0.13089 0.05295545 -5.99218        0 -24.52886
    VarDiff     SkewDiff     KurtDiff
1 -7090.392 -0.007328651 1.811567e-07

$medianscores
  TheNames MaxError_CDF MaxErrorAt_CDF diffat25 diffatMedian diffat75
1        0       0.6649              1   0.6649       0.4429   0.2002
  horzdiffat25 horzdiffatMed horzdiffat75 Medians MAE_CDF        MSE DerivScore
1            0           0.1          0.3       1 0.19838 0.08008855  0.2366023
  MaxError_PDF MaxErrorAt_PDF MAE_PDF    MSE_PDF MeanDiff ModeDiff   StdDiff
1       0.6649              1 0.13089 0.05295545 -5.99218        0 -24.52886
    VarDiff     SkewDiff     KurtDiff
1 -7090.392 -0.007328651 1.811567e-07

$yourCDFoutput
 [1] 1 1 1 1 1 1 1 1 1 1

$yourPDFoutput
 [1] 1 0 0 0 0 0 0 0 0 0

$realCDFoutput
 [1] 0.3351 0.5571 0.7007 0.7998 0.8647 0.9106 0.9394 0.9580 0.9717 0.9791

$realPDFoutput
 [1] 0.3351 0.2220 0.1436 0.0991 0.0649 0.0459 0.0288 0.0186 0.0137 0.0074

$databins
 [1]  1  2  3  4  5  6  7  8  9 10

$TestPack_CDF
$TestPack_CDF$MaxError_CDF
function (Y, est, ...) 
{
    return(getMaxError(Y, est, ...))
}
<environment: namespace:CDF.PSIdekick>

$TestPack_CDF$MaxErrorAt_CDF
function (Y, est, range, gran, ...) 
{
    return(findMaxError(Y, est, range, gran, ...))
}
<environment: namespace:CDF.PSIdekick>

$TestPack_CDF$diffat25
function (Y, est, ...) 
{
    return(diffatQuantile(Y, est, 0.25, ...))
}
<environment: namespace:CDF.PSIdekick>

$TestPack_CDF$diffatMedian
function (Y, est, ...) 
{
    return(diffatQuantile(Y, est, 0.5, ...))
}
<environment: namespace:CDF.PSIdekick>

$TestPack_CDF$diffat75
function (Y, est, ...) 
{
    return(diffatQuantile(Y, est, 0.75, ...))
}
<environment: namespace:CDF.PSIdekick>

$TestPack_CDF$horzdiffat25
function (Y, est, range, gran, ...) 
{
    return(horzdiffatQuantile(Y, est, range, gran, 0.25, ...))
}
<environment: namespace:CDF.PSIdekick>

$TestPack_CDF$horzdiffatMed
function (Y, est, range, gran, ...) 
{
    return(horzdiffatQuantile(Y, est, range, gran, 0.5, ...))
}
<environment: namespace:CDF.PSIdekick>

$TestPack_CDF$horzdiffat75
function (Y, est, range, gran, ...) 
{
    return(horzdiffatQuantile(Y, est, range, gran, 0.75, ...))
}
<environment: namespace:CDF.PSIdekick>

$TestPack_CDF$Medians
function (est, range, gran, ...) 
{
    return(QuantileFromCDF(est, range, gran, 0.5, ...))
}
<environment: namespace:CDF.PSIdekick>

$TestPack_CDF$MAE_CDF
function (Y, est, ...) 
{
    diffs <- c()
    diffs <- abs(Y - est)
    L1 <- sum(diffs)
    MAE <- L1/length(Y)
    return(MAE)
}
<environment: namespace:CDF.PSIdekick>

$TestPack_CDF$MSE
function (Y, est, ...) 
{
    sqvect <- c()
    sqvect <- (Y - est)^2
    L2 <- sqrt(sum(sqvect))
    MSE <- (L2^2)/length(Y)
    return(MSE)
}
<environment: namespace:CDF.PSIdekick>

$TestPack_CDF$DerivScore
function (Y, est, ...) 
{
    workingY <- Y
    workingE <- est
    crunch <- c()
    Ypdf <- c()
    Epdf <- c()
    Ypdf[1] <- workingY[1]
    Epdf[1] <- workingE[1]
    for (v in length(workingY):2) {
        Ypdf[v] <- workingY[v] - workingY[v - 1]
        Epdf[v] <- workingE[v] - workingE[v - 1]
    }
    diff <- abs(Ypdf - Epdf)
    L1area <- sum(diff)
    MAE <- L1area/length(Y)
    crunch[length(crunch) + 1] <- MAE
    for (k in 1:(floor(log2(length(Y))))) {
        Yx <- c()
        Ex <- c()
        for (i in 1:floor(length(workingY)/2)) {
            Yx[i] <- (workingY[2 * i] + workingY[(2 * i) - 1])/2
        }
        if ((floor(length(Yx)) * 2) != length(workingY)) {
            remainder <- c(workingY[length(workingY) - (2 * length(Yx))]:workingY[length(workingY)])
            Yx[length(Yx) + 1] <- mean(remainder)
        }
        for (i in 1:floor(length(workingE)/2)) {
            Ex[i] <- (workingE[2 * i] + workingE[(2 * i) - 1])/2
        }
        if ((floor(length(Ex)) * 2) != length(workingE)) {
            remainder <- c(workingE[length(workingE) - (2 * length(Ex))]:workingE[length(workingE)])
            Ex[length(Ex) + 1] <- mean(remainder)
        }
        workingE <- Ex
        workingY <- Yx
        Ypdf <- c()
        Epdf <- c()
        Ypdf[1] <- workingY[1]
        Epdf[1] <- workingE[1]
        if (length(workingY) > 1) {
            for (v in length(workingY):2) {
                Ypdf[v] <- workingY[v] - workingY[v - 1]
                Epdf[v] <- workingE[v] - workingE[v - 1]
            }
            diff <- abs(Ypdf - Epdf)
            L1area <- sum(diff)
            MAE <- L1area/length(workingY)
            crunch[length(crunch) + 1] <- MAE
        }
    }
    output <- mean(crunch)
    return(output)
}
<bytecode: 0x841f600>
<environment: namespace:CDF.PSIdekick>


$TestPack_PDF
$TestPack_PDF$MaxError_PDF
function (Y, est, ...) 
{
    return(getMaxError(Y, est, ...))
}
<environment: namespace:CDF.PSIdekick>

$TestPack_PDF$MaxErrorAt_PDF
function (Y, est, range, gran, ...) 
{
    return(findMaxError(Y, est, range, gran, ...))
}
<environment: namespace:CDF.PSIdekick>

$TestPack_PDF$MAE_PDF
function (Y, est, ...) 
{
    diffs <- c()
    diffs <- abs(Y - est)
    L1 <- sum(diffs)
    MAE <- L1/length(Y)
    return(MAE)
}
<environment: namespace:CDF.PSIdekick>

$TestPack_PDF$MSE_PDF
function (Y, est, ...) 
{
    sqvect <- c()
    sqvect <- (Y - est)^2
    L2 <- sqrt(sum(sqvect))
    MSE <- (L2^2)/length(Y)
    return(MSE)
}
<environment: namespace:CDF.PSIdekick>

$TestPack_PDF$MeanDiff
function (Y, est, range, gran) 
{
    Domain <- seq(from = range[1], to = range[2], by = gran)
    trueweights <- c()
    dpweights <- c()
    trueweights <- (Y * Domain)
    dpweights <- (est * Domain)
    truemean <- sum(trueweights)
    dpmean <- sum(dpweights)
    return(truemean - dpmean)
}
<environment: namespace:CDF.PSIdekick>

$TestPack_PDF$ModeDiff
function (Y, est, range, gran, ...) 
{
    Domain <- seq(from = range[1], to = range[2], by = gran)
    PDF1k <- Y * 1e+16
    PDFblank <- PDF1k - (max(PDF1k) - 1)
    PDFblank <- (PDFblank + abs(PDFblank))/2
    valuevect <- PDFblank * Domain
    truemode <- (sum(valuevect)/sum(PDFblank))
    PDF1k <- est * 1e+15
    PDFblank <- PDF1k - (max(PDF1k) - 1)
    PDFblank <- (PDFblank + abs(PDFblank))/2
    valuevect <- PDFblank * Domain
    dpmode <- (sum(valuevect)/sum(PDFblank))
    return(truemode - dpmode)
}
<bytecode: 0x71a6850>
<environment: namespace:CDF.PSIdekick>

$TestPack_PDF$StdDiff
function (Y, est, range, gran) 
{
    Domain <- seq(from = range[1], to = range[2], by = gran)
    trueweights <- c()
    dpweights <- c()
    trueweights <- (Y * Domain)
    dpweights <- (est * Domain)
    truemean <- sum(trueweights)
    dpmean <- sum(dpweights)
    truedistances <- c()
    dpdistance <- c()
    truedistances <- ((truemean - Domain)^2) * (Y)
    dpdistances <- ((dpmean - Domain)^2) * (est)
    trueSTD <- sqrt(sum(truedistances))
    dpSTD <- sqrt(sum(dpdistances))
    return(trueSTD - dpSTD)
}
<bytecode: 0x641cf90>
<environment: namespace:CDF.PSIdekick>

$TestPack_PDF$VarDiff
function (Y, est, range, gran) 
{
    Domain <- seq(from = range[1], to = range[2], by = gran)
    trueweights <- c()
    dpweights <- c()
    trueweights <- (Y * Domain)
    dpweights <- (est * Domain)
    truemean <- sum(trueweights)
    dpmean <- sum(dpweights)
    truedistances <- c()
    dpdistance <- c()
    truedistances <- ((truemean - Domain)^2) * (Y)
    dpdistances <- ((dpmean - Domain)^2) * (est)
    truevariance <- sum(truedistances)
    dpvariance <- sum(dpdistances)
    return(truevariance - dpvariance)
}
<bytecode: 0x1750dd8>
<environment: namespace:CDF.PSIdekick>

$TestPack_PDF$SkewDiff
function (Y, est, range, gran) 
{
    Domain <- seq(from = range[1], to = range[2], by = gran)
    trueweights <- c()
    dpweights <- c()
    trueweights <- (Y * Domain)
    dpweights <- (est * Domain)
    truemean <- sum(trueweights)
    dpmean <- sum(dpweights)
    truedistances <- c()
    dpdistance <- c()
    truedistances <- ((truemean - Domain)^2) * (Y)
    dpdistances <- ((dpmean - Domain)^2) * (est)
    truestddev <- sqrt(sum(truedistances))
    dpstddev <- sqrt(sum(dpdistances))
    trueskewness <- mean(((trueweights - truemean)/truestddev)^3)
    dpskewness <- mean(((dpweights - dpmean)/dpstddev)^3)
    return(trueskewness - dpskewness)
}
<bytecode: 0x4f989c0>
<environment: namespace:CDF.PSIdekick>

$TestPack_PDF$KurtDiff
function (Y, est, gran, range) 
{
    Domain <- seq(from = range[1], to = range[2], by = gran)
    trueweights <- c()
    dpweights <- c()
    trueweights <- (Y * Domain)
    dpweights <- (est * Domain)
    truemean <- sum(trueweights)
    dpmean <- sum(dpweights)
    truedistances <- c()
    dpdistance <- c()
    truedistances <- ((truemean - Domain)^2) * (Y)
    dpdistances <- ((dpmean - Domain)^2) * (est)
    truevariance <- sum(truedistances)
    truemoment4 <- (mean(truedistances))
    truesigma4 <- truevariance^2
    truekurtosis <- truemoment4/truesigma4
    dpvariance <- sum(dpdistances)
    dpmoment4 <- (mean(dpdistances))
    dpsigma4 <- dpvariance^2
    dpkurtosis <- dpmoment4/dpsigma4
    return(truekurtosis - dpkurtosis)
}
<bytecode: 0x80ddb98>
<environment: namespace:CDF.PSIdekick>


$allscores
$allscores$MaxError_CDF
 [1] 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649
[11] 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649

$allscores$MaxErrorAt_CDF
 [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

$allscores$diffat25
 [1] 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649
[11] 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649

$allscores$diffatMedian
 [1] 0.4429 0.4429 0.4429 0.4429 0.4429 0.4429 0.4429 0.4429 0.4429 0.4429
[11] 0.4429 0.4429 0.4429 0.4429 0.4429 0.4429 0.4429 0.4429 0.4429 0.4429

$allscores$diffat75
 [1] 0.2002 0.2002 0.2002 0.2002 0.2002 0.2002 0.2002 0.2002 0.2002 0.2002
[11] 0.2002 0.2002 0.2002 0.2002 0.2002 0.2002 0.2002 0.2002 0.2002 0.2002

$allscores$horzdiffat25
 [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

$allscores$horzdiffatMed
 [1] 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1
[20] 0.1

$allscores$horzdiffat75
 [1] 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3
[20] 0.3

$allscores$Medians
 [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

$allscores$MAE_CDF
 [1] 0.19838 0.19838 0.19838 0.19838 0.19838 0.19838 0.19838 0.19838 0.19838
[10] 0.19838 0.19838 0.19838 0.19838 0.19838 0.19838 0.19838 0.19838 0.19838
[19] 0.19838 0.19838

$allscores$MSE
 [1] 0.08008855 0.08008855 0.08008855 0.08008855 0.08008855 0.08008855
 [7] 0.08008855 0.08008855 0.08008855 0.08008855 0.08008855 0.08008855
[13] 0.08008855 0.08008855 0.08008855 0.08008855 0.08008855 0.08008855
[19] 0.08008855 0.08008855

$allscores$DerivScore
 [1] 0.2366023 0.2366023 0.2366023 0.2366023 0.2366023 0.2366023 0.2366023
 [8] 0.2366023 0.2366023 0.2366023 0.2366023 0.2366023 0.2366023 0.2366023
[15] 0.2366023 0.2366023 0.2366023 0.2366023 0.2366023 0.2366023

$allscores$MaxError_PDF
 [1] 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649
[11] 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649 0.6649

$allscores$MaxErrorAt_PDF
 [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

$allscores$MAE_PDF
 [1] 0.13089 0.13089 0.13089 0.13089 0.13089 0.13089 0.13089 0.13089 0.13089
[10] 0.13089 0.13089 0.13089 0.13089 0.13089 0.13089 0.13089 0.13089 0.13089
[19] 0.13089 0.13089

$allscores$MSE_PDF
 [1] 0.05295545 0.05295545 0.05295545 0.05295545 0.05295545 0.05295545
 [7] 0.05295545 0.05295545 0.05295545 0.05295545 0.05295545 0.05295545
[13] 0.05295545 0.05295545 0.05295545 0.05295545 0.05295545 0.05295545
[19] 0.05295545 0.05295545

$allscores$MeanDiff
 [1] -5.99218 -5.99218 -5.99218 -5.99218 -5.99218 -5.99218 -5.99218 -5.99218
 [9] -5.99218 -5.99218 -5.99218 -5.99218 -5.99218 -5.99218 -5.99218 -5.99218
[17] -5.99218 -5.99218 -5.99218 -5.99218

$allscores$ModeDiff
 [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

$allscores$StdDiff
 [1] -24.52886 -24.52886 -24.52886 -24.52886 -24.52886 -24.52886 -24.52886
 [8] -24.52886 -24.52886 -24.52886 -24.52886 -24.52886 -24.52886 -24.52886
[15] -24.52886 -24.52886 -24.52886 -24.52886 -24.52886 -24.52886

$allscores$VarDiff
 [1] -7090.392 -7090.392 -7090.392 -7090.392 -7090.392 -7090.392 -7090.392
 [8] -7090.392 -7090.392 -7090.392 -7090.392 -7090.392 -7090.392 -7090.392
[15] -7090.392 -7090.392 -7090.392 -7090.392 -7090.392 -7090.392

$allscores$SkewDiff
 [1] -0.007328651 -0.007328651 -0.007328651 -0.007328651 -0.007328651
 [6] -0.007328651 -0.007328651 -0.007328651 -0.007328651 -0.007328651
[11] -0.007328651 -0.007328651 -0.007328651 -0.007328651 -0.007328651
[16] -0.007328651 -0.007328651 -0.007328651 -0.007328651 -0.007328651

$allscores$KurtDiff
 [1] 1.811567e-07 1.811567e-07 1.811567e-07 1.811567e-07 1.811567e-07
 [6] 1.811567e-07 1.811567e-07 1.811567e-07 1.811567e-07 1.811567e-07
[11] 1.811567e-07 1.811567e-07 1.811567e-07 1.811567e-07 1.811567e-07
[16] 1.811567e-07 1.811567e-07 1.811567e-07 1.811567e-07 1.811567e-07


> 
> 
> 
> cleanEx()
> nameEx("CDFtestTrackx")
> ### * CDFtestTrackx
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: CDFtestTrackx
> ### Title: Test a single CDF implementation with one set of parameters.
> ### Aliases: CDFtestTrackx
> 
> ### ** Examples
> 
> CDFtestTrackx(badCDF, eps = .01, cdfstep = 0, data = rexp(10000,.4),
+   range= c(1,10), gran = .1, reps = 20, samplesize = 10000)
$allscores
$allscores$MaxError_CDF
 [1] 0.8794 0.8794 0.8794 0.8794 0.8794 0.8794 0.8794 0.8794 0.8794 0.8794
[11] 0.8794 0.8794 0.8794 0.8794 0.8794 0.8794 0.8794 0.8794 0.8794 0.8794

$allscores$MaxErrorAt_CDF
 [1] 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10

$allscores$diffat25
 [1] 0.3341 0.3341 0.3341 0.3341 0.3341 0.3341 0.3341 0.3341 0.3341 0.3341
[11] 0.3341 0.3341 0.3341 0.3341 0.3341 0.3341 0.3341 0.3341 0.3341 0.3341

$allscores$diffatMedian
 [1] 0.5122 0.5122 0.5122 0.5122 0.5122 0.5122 0.5122 0.5122 0.5122 0.5122
[11] 0.5122 0.5122 0.5122 0.5122 0.5122 0.5122 0.5122 0.5122 0.5122 0.5122

$allscores$diffat75
 [1] 0.7526 0.7526 0.7526 0.7526 0.7526 0.7526 0.7526 0.7526 0.7526 0.7526
[11] 0.7526 0.7526 0.7526 0.7526 0.7526 0.7526 0.7526 0.7526 0.7526 0.7526

$allscores$horzdiffat25
 [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

$allscores$horzdiffatMed
 [1] 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8 1.8
[20] 1.8

$allscores$horzdiffat75
 [1] 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5 3.5
[20] 3.5

$allscores$Medians
 [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

$allscores$MAE_CDF
 [1] 0.7165011 0.7165011 0.7165011 0.7165011 0.7165011 0.7165011 0.7165011
 [8] 0.7165011 0.7165011 0.7165011 0.7165011 0.7165011 0.7165011 0.7165011
[15] 0.7165011 0.7165011 0.7165011 0.7165011 0.7165011 0.7165011

$allscores$MSE
 [1] 0.5437479 0.5437479 0.5437479 0.5437479 0.5437479 0.5437479 0.5437479
 [8] 0.5437479 0.5437479 0.5437479 0.5437479 0.5437479 0.5437479 0.5437479
[15] 0.5437479 0.5437479 0.5437479 0.5437479 0.5437479 0.5437479

$allscores$MaxError_PDF
 [1] 0.2341 0.2341 0.2341 0.2341 0.2341 0.2341 0.2341 0.2341 0.2341 0.2341
[11] 0.2341 0.2341 0.2341 0.2341 0.2341 0.2341 0.2341 0.2341 0.2341 0.2341

$allscores$MaxErrorAt_PDF
 [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

$allscores$MAE_PDF
 [1] 0.009663736 0.009663736 0.009663736 0.009663736 0.009663736 0.009663736
 [7] 0.009663736 0.009663736 0.009663736 0.009663736 0.009663736 0.009663736
[13] 0.009663736 0.009663736 0.009663736 0.009663736 0.009663736 0.009663736
[19] 0.009663736 0.009663736

$allscores$MSE_PDF
 [1] 0.0006998666 0.0006998666 0.0006998666 0.0006998666 0.0006998666
 [6] 0.0006998666 0.0006998666 0.0006998666 0.0006998666 0.0006998666
[11] 0.0006998666 0.0006998666 0.0006998666 0.0006998666 0.0006998666
[16] 0.0006998666 0.0006998666 0.0006998666 0.0006998666 0.0006998666

$allscores$MeanDiff
 [1] 2.36178 2.36178 2.36178 2.36178 2.36178 2.36178 2.36178 2.36178 2.36178
[10] 2.36178 2.36178 2.36178 2.36178 2.36178 2.36178 2.36178 2.36178 2.36178
[19] 2.36178 2.36178

$allscores$ModeDiff
 [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

$allscores$StdDiff
 [1] 1.624533 1.624533 1.624533 1.624533 1.624533 1.624533 1.624533 1.624533
 [9] 1.624533 1.624533 1.624533 1.624533 1.624533 1.624533 1.624533 1.624533
[17] 1.624533 1.624533 1.624533 1.624533

$allscores$VarDiff
 [1] 3.563808 3.563808 3.563808 3.563808 3.563808 3.563808 3.563808 3.563808
 [9] 3.563808 3.563808 3.563808 3.563808 3.563808 3.563808 3.563808 3.563808
[17] 3.563808 3.563808 3.563808 3.563808

$allscores$SkewDiff
 [1] -2.032429 -2.032429 -2.032429 -2.032429 -2.032429 -2.032429 -2.032429
 [8] -2.032429 -2.032429 -2.032429 -2.032429 -2.032429 -2.032429 -2.032429
[15] -2.032429 -2.032429 -2.032429 -2.032429 -2.032429 -2.032429

$allscores$KurtDiff
 [1] -0.1326518 -0.1326518 -0.1326518 -0.1326518 -0.1326518 -0.1326518
 [7] -0.1326518 -0.1326518 -0.1326518 -0.1326518 -0.1326518 -0.1326518
[13] -0.1326518 -0.1326518 -0.1326518 -0.1326518 -0.1326518 -0.1326518
[19] -0.1326518 -0.1326518

$allscores$MSEanalytic
 [1] 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11
[16] 0.11 0.11 0.11 0.11 0.11


> 
> 
> 
> cleanEx()
> nameEx("DerivDiff")
> ### * DerivDiff
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: DerivDiff
> ### Title: Determine how well a single DPCDF matches the shape of its data.
> ### Aliases: DerivDiff
> 
> ### ** Examples
> 
> DerivDiff(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1),c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
[1] 0.1595833
> 
> 
> 
> cleanEx()
> nameEx("L1empiric")
> ### * L1empiric
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: L1empiric
> ### Title: Calculate the area between two CDFs.
> ### Aliases: L1empiric
> 
> ### ** Examples
> 
> L1empiric(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
[1] 2
> 
> 
> 
> cleanEx()
> nameEx("L2empiric")
> ### * L2empiric
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: L2empiric
> ### Title: Calculate the empirical L2norm between two CDFs.
> ### Aliases: L2empiric
> 
> ### ** Examples
> 
> L2empiric(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
[1] 0.8944272
> 
> 
> 
> cleanEx()
> nameEx("MAE")
> ### * MAE
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MAE
> ### Title: Calculate the MAE of a dpCDF relative to that of the non-private
> ###   CDF.
> ### Aliases: MAE
> 
> ### ** Examples
> 
> MAE(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
[1] 0.2
> 
> 
> 
> cleanEx()
> nameEx("MSE")
> ### * MSE
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MSE
> ### Title: Calculate the MSE of a DP-CDF relative to the non-private CDF.
> ### Aliases: MSE
> 
> ### ** Examples
> 
> MSE(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
[1] 0.08
> 
> 
> 
> cleanEx()
> nameEx("MSEanalytic")
> ### * MSEanalytic
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MSEanalytic
> ### Title: Determine the expected MSE of a simple DPCDF from its
> ###   parameters.
> ### Aliases: MSEanalytic
> 
> ### ** Examples
> 
> MSEanalytic(.01, c(1,10),1, rexp(10000,.4))
[1] 90.45333
> 
> 
> 
> cleanEx()
> nameEx("MaxErrorAt_CDF")
> ### * MaxErrorAt_CDF
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MaxErrorAt_CDF
> ### Title: Locate where the maximum error occurs between two CDFs
> ### Aliases: MaxErrorAt_CDF
> 
> ### ** Examples
> 
> MaxErrorAt_CDF(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1),
+     range= c(1,10), gran =1)
> 
> 
> 
> cleanEx()
> nameEx("MaxErrorAt_PDF")
> ### * MaxErrorAt_PDF
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MaxErrorAt_PDF
> ### Title: Locate where the maximum error occurs between two PDFs
> ### Aliases: MaxErrorAt_PDF
> 
> ### ** Examples
> 
> MaxErrorAt_PDF(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1),
+    range= c(1,10), gran =1)
> 
> 
> 
> cleanEx()
> nameEx("MaxError_CDF")
> ### * MaxError_CDF
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MaxError_CDF
> ### Title: Determine an approximate CDF's maximum error.
> ### Aliases: MaxError_CDF
> 
> ### ** Examples
> 
> MaxError_CDF(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
> 
> 
> 
> cleanEx()
> nameEx("MaxError_PDF")
> ### * MaxError_PDF
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MaxError_PDF
> ### Title: Determine an approximate PDF's maximum error.
> ### Aliases: MaxError_PDF
> 
> ### ** Examples
> 
> MaxError_PDF(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
> 
> 
> 
> cleanEx()
> nameEx("Medians")
> ### * Medians
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Medians
> ### Title: Retrieve a median estimate from the dpCDF
> ### Aliases: Medians
> 
> ### ** Examples
> 
> Medians(c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1),c(1,10), 1)
[1] 9
> 
> 
> 
> cleanEx()
> nameEx("MovetoRange")
> ### * MovetoRange
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MovetoRange
> ### Title: Clamp a value to a specified range.
> ### Aliases: MovetoRange
> 
> ### ** Examples
> 
> MovetoRange(11, c(1,10))
[1] 10
> 
> 
> 
> cleanEx()
> nameEx("QuantileFromCDF")
> ### * QuantileFromCDF
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: QuantileFromCDF
> ### Title: Retrieve a private quantile estimate from the dpCDF
> ### Aliases: QuantileFromCDF
> 
> ### ** Examples
> 
> QuantileFromCDF(c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1),c(1,10), 1, .05)
[1] 1
> 
> 
> 
> cleanEx()
> nameEx("SDempiric")
> ### * SDempiric
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SDempiric
> ### Title: Calculate the std. dev. on a DPCDF.
> ### Aliases: SDempiric
> 
> ### ** Examples
> 
> SDempiric(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
[1] 0.2828427
> 
> 
> 
> cleanEx()
> nameEx("badCDF")
> ### * badCDF
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: badCDF
> ### Title: Make a straight-line faux CDF.
> ### Aliases: badCDF
> 
> ### ** Examples
> 
> badCDF(c(1,50), 1)
 [1] 0.02 0.04 0.06 0.08 0.10 0.12 0.14 0.16 0.18 0.20 0.22 0.24 0.26 0.28 0.30
[16] 0.32 0.34 0.36 0.38 0.40 0.42 0.44 0.46 0.48 0.50 0.52 0.54 0.56 0.58 0.60
[31] 0.62 0.64 0.66 0.68 0.70 0.72 0.74 0.76 0.78 0.80 0.82 0.84 0.86 0.88 0.90
[46] 0.92 0.94 0.96 0.98 1.00
> 
> 
> 
> cleanEx()
> nameEx("diffat25")
> ### * diffat25
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffat25
> ### Title: Determine the distance between CDFs at the .25 quantile.
> ### Aliases: diffat25
> 
> ### ** Examples
> 
> diffat25(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
[1] 0
> 
> 
> 
> cleanEx()
> nameEx("diffat75")
> ### * diffat75
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffat75
> ### Title: Determine the distance between CDFs at the .75 quantile.
> ### Aliases: diffat75
> 
> ### ** Examples
> 
> diffat75(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
[1] 0.8
> 
> 
> 
> cleanEx()
> nameEx("diffatMedian")
> ### * diffatMedian
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffatMedian
> ### Title: Determine the distance between CDFs at the median.
> ### Aliases: diffatMedian
> 
> ### ** Examples
> 
> diffatMedian(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
[1] 0.5
> 
> 
> 
> cleanEx()
> nameEx("diffatQuantile")
> ### * diffatQuantile
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffatQuantile
> ### Title: Determine the distance between CDFs at key quantiles.
> ### Aliases: diffatQuantile
> 
> ### ** Examples
> 
> diffatQuantile(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1),
+     c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1), .05)
[1] 0
> 
> 
> 
> cleanEx()
> nameEx("findMaxError")
> ### * findMaxError
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: findMaxError
> ### Title: Locate where the maximum error occurs between two CDFs
> ### Aliases: findMaxError
> 
> ### ** Examples
> 
> findMaxError(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1), c(1,10),1)
> 
> 
> 
> cleanEx()
> nameEx("functionH")
> ### * functionH
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: functionH
> ### Title: Create a DP-CDF by creating a K-degree noisy tree
> ### Aliases: functionH
> 
> ### ** Examples
> 
> functionH(eps = .01, cdfstep = .1, data = rexp(10000,.4), range= c(1,10), gran = .1, K= 2)
$theCDF
 [1] 0.71796940 0.64428601 0.92873918 0.67438592 0.02501721 0.62838969
 [7] 0.37578383 0.49629910 0.12366577 0.22874511 0.37710456 0.24085588
[13] 0.16336217 0.29034646 0.30047353 0.78786550 0.72737869 0.95936848
[19] 0.86403182 0.84380744 0.90239772 0.90838683 1.15412177 0.77943238
[25] 0.62998262 1.00691322 1.13755197 0.75852605 0.84481721 0.89218743
[31] 0.95500523 0.80459975 0.75377011 0.85371406 0.78297535 0.71419835
[37] 0.56967352 0.69761317 0.50807176 0.89591405 0.99964520 0.81553195
[43] 0.85660631 0.99160536 0.98447028 1.04583601 0.81875407 0.74247917
[49] 0.81781156 0.86908900 0.96260954 0.77944627 0.66896445 0.93438306
[55] 0.63551046 0.94531606 1.13054561 0.87666559 0.73752509 0.80716352
[61] 0.72451639 0.76272978 0.67796301 0.98102865 0.83384064 0.65141274
[67] 0.83140743 1.04861584 1.06289220 0.84597595 0.94133847 0.74363581
[73] 1.06245161 0.88483074 0.75584994 0.96032578 1.44348225 1.36648311
[79] 1.11019335 0.92221616 0.82148885 0.85109126 0.61496560 0.79046670
[85] 0.94852315 0.84272839 0.88249612 0.80390708 0.91586579 0.82869972
[91] 1.00000000

$bound
 [1] 0.03563637 0.03528000 0.06414546 0.03484445 0.06414546 0.06272000
 [7] 0.08552728 0.03430000 0.06414546 0.06272000 0.08552728 0.06097778
[13] 0.08552728 0.08232000 0.09978182 0.03360000 0.06414546 0.06272000
[19] 0.08552728 0.06097778 0.08552728 0.08232000 0.09978182 0.05880000
[25] 0.08552728 0.08232000 0.09978182 0.07840000 0.09978182 0.09408000
[31] 0.10690910 0.03266667 0.06414546 0.06272000 0.08552728 0.06097778
[37] 0.08552728 0.08232000 0.09978182 0.05880000 0.08552728 0.08232000
[43] 0.09978182 0.07840000 0.09978182 0.09408000 0.10690910 0.05600000
[49] 0.08552728 0.08232000 0.09978182 0.07840000 0.09978182 0.09408000
[55] 0.10690910 0.07350000 0.09978182 0.09408000 0.10690910 0.08711112
[61] 0.10690910 0.09800000 0.10690910 0.03136000 0.06097778 0.05880000
[67] 0.07840000 0.05600000 0.07840000 0.07350000 0.08711112 0.05226667
[73] 0.07840000 0.07350000 0.08711112 0.06720000 0.08711112 0.07840000
[79] 0.08711112 0.04704000 0.07350000 0.06720000 0.07840000 0.05880000
[85] 0.07840000 0.06720000 0.07350000 0.04704000 0.05226667 0.03136000
[91] 0.00000000

> 
> 
> 
> cleanEx()
> nameEx("functionHmono")
> ### * functionHmono
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: functionHmono
> ### Title: Create a monotonically increasing DP-CDF by creating a K-degree
> ###   noisy tree
> ### Aliases: functionHmono
> 
> ### ** Examples
> 
> functionHmono(eps = .01, cdfstep = .1, data = rexp(10000,.4), range= c(1,10), gran = .1, K= 2)
$theCDF
 [1] 0.4143616 0.4143616 0.4143616 0.4143616 0.4143616 0.4143616 0.4143616
 [8] 0.4143616 0.4143616 0.4143616 0.4143616 0.4143616 0.4143616 0.4143616
[15] 0.4143616 0.7576221 0.7576221 0.8327794 0.8327794 0.8327794 0.8327794
[22] 0.8327794 0.8327794 0.8327794 0.8327794 0.8327794 0.8327794 0.8327794
[29] 0.8327794 0.8327794 0.8327794 0.8327794 0.8327794 0.8327794 0.8327794
[36] 0.8327794 0.8327794 0.8327794 0.8327794 0.8492418 0.8492418 0.8492418
[43] 0.8492418 0.8492418 0.8492418 0.8492418 0.8492418 0.8492418 0.8492418
[50] 0.8492418 0.8492418 0.8492418 0.8492418 0.8492418 0.8492418 0.8492418
[57] 0.8492418 0.8492418 0.8492418 0.8492418 0.8492418 0.8492418 0.8492418
[64] 0.8492418 0.8492418 0.8492418 0.8492418 0.9181988 0.9181988 0.9181988
[71] 0.9181988 0.9181988 0.9181988 0.9181988 0.9181988 0.9401956 0.9401956
[78] 0.9401956 0.9401956 0.9401956 0.9401956 0.9401956 0.9401956 0.9401956
[85] 0.9401956 0.9401956 0.9401956 0.9401956 0.9401956 0.9401956 1.0000000

$bound
 [1] 0.03563637 0.03528000 0.06414546 0.03484445 0.06414546 0.06272000
 [7] 0.08552728 0.03430000 0.06414546 0.06272000 0.08552728 0.06097778
[13] 0.08552728 0.08232000 0.09978182 0.03360000 0.06414546 0.06272000
[19] 0.08552728 0.06097778 0.08552728 0.08232000 0.09978182 0.05880000
[25] 0.08552728 0.08232000 0.09978182 0.07840000 0.09978182 0.09408000
[31] 0.10690910 0.03266667 0.06414546 0.06272000 0.08552728 0.06097778
[37] 0.08552728 0.08232000 0.09978182 0.05880000 0.08552728 0.08232000
[43] 0.09978182 0.07840000 0.09978182 0.09408000 0.10690910 0.05600000
[49] 0.08552728 0.08232000 0.09978182 0.07840000 0.09978182 0.09408000
[55] 0.10690910 0.07350000 0.09978182 0.09408000 0.10690910 0.08711112
[61] 0.10690910 0.09800000 0.10690910 0.03136000 0.06097778 0.05880000
[67] 0.07840000 0.05600000 0.07840000 0.07350000 0.08711112 0.05226667
[73] 0.07840000 0.07350000 0.08711112 0.06720000 0.08711112 0.07840000
[79] 0.08711112 0.04704000 0.07350000 0.06720000 0.07840000 0.05880000
[85] 0.07840000 0.06720000 0.07350000 0.04704000 0.05226667 0.03136000
[91] 0.00000000

> 
> 
> 
> cleanEx()
> nameEx("functionS2")
> ### * functionS2
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: functionS2
> ### Title: Build dpCDFs through Histogram smoothing and minimized expected
> ###   L2 per bin
> ### Aliases: functionS2
> 
> ### ** Examples
> 
> functionS2(eps = .01, cdfstep = .1, data = rexp(10000,.4), range= c(1,10), gran = .1, K= 2)
$theCDF
 [1] 0.01098901 0.02197802 0.03296703 0.04395604 0.05494505 0.06593407
 [7] 0.07692308 0.08791209 0.09890110 0.10989011 0.12087912 0.13186813
[13] 0.14285714 0.15384615 0.16483516 0.17582418 0.18681319 0.19780220
[19] 0.20879121 0.21978022 0.23076923 0.24175824 0.25274725 0.26373626
[25] 0.27472527 0.28571429 0.29670330 0.30769231 0.31868132 0.32967033
[31] 0.34065934 0.35164835 0.36263736 0.37362637 0.38461538 0.39560440
[37] 0.40659341 0.41758242 0.42857143 0.43956044 0.45054945 0.46153846
[43] 0.47252747 0.48351648 0.49450549 0.50549451 0.51648352 0.52747253
[49] 0.53846154 0.54945055 0.56043956 0.57142857 0.58241758 0.59340659
[55] 0.60439560 0.61538462 0.62637363 0.63736264 0.64835165 0.65934066
[61] 0.67032967 0.68131868 0.69230769 0.70329670 0.71428571 0.72527473
[67] 0.73626374 0.74725275 0.75824176 0.76923077 0.78021978 0.79120879
[73] 0.80219780 0.81318681 0.82417582 0.83516484 0.84615385 0.85714286
[79] 0.86813187 0.87912088 0.89010989 0.90109890 0.91208791 0.92307692
[85] 0.93406593 0.94505495 0.95604396 0.96703297 0.97802198 0.98901099
[91] 1.00000000

$bound
 [1] 0.003164835 0.006259341 0.009283517 0.012237363 0.015120880 0.017934067
 [7] 0.020676924 0.023349452 0.025951650 0.028483518 0.030945056 0.033336265
[13] 0.035657144 0.037907694 0.040087914 0.042197804 0.044237365 0.046206595
[19] 0.048105497 0.049934068 0.051692310 0.053380222 0.054997805 0.056545057
[25] 0.058021981 0.059428574 0.060764838 0.062030772 0.063226376 0.064351651
[31] 0.065406596 0.066391212 0.067305498 0.068149454 0.068923080 0.069626377
[37] 0.070259344 0.070821981 0.071314289 0.071736267 0.072087915 0.072369234
[43] 0.072580223 0.072720882 0.072791212 0.072791212 0.072720882 0.072580223
[49] 0.072369234 0.072087915 0.071736267 0.071314289 0.070821981 0.070259344
[55] 0.069626377 0.068923080 0.068149454 0.067305498 0.066391212 0.065406596
[61] 0.064351651 0.063226376 0.062030772 0.060764838 0.059428574 0.058021981
[67] 0.056545057 0.054997805 0.053380222 0.051692310 0.049934068 0.048105497
[73] 0.046206595 0.044237365 0.042197804 0.040087914 0.037907694 0.035657144
[79] 0.033336265 0.030945056 0.028483518 0.025951650 0.023349452 0.020676924
[85] 0.017934067 0.015120880 0.012237363 0.009283517 0.006259341 0.003164835
[91] 0.000000000

> 
> 
> 
> cleanEx()
> nameEx("functionSUB")
> ### * functionSUB
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: functionSUB
> ### Title: Build dpCDFs through use of a noisy tree with bin merging.
> ### Aliases: functionSUB
> 
> ### ** Examples
> 
> functionSUB(eps = .01, cdfstep = .1, data = rexp(10000,.4), range= c(1,10), gran = .1, K= 2)
$theCDF
 [1] 0.09090909 0.10000000 0.18181818 0.11111111 0.18181818 0.20000000
 [7] 0.27272727 0.12500000 0.18181818 0.20000000 0.27272727 0.22222222
[13] 0.27272727 0.30000000 0.36363636 0.14285714 0.18181818 0.20000000
[19] 0.27272727 0.22222222 0.27272727 0.30000000 0.36363636 0.25000000
[25] 0.27272727 0.30000000 0.36363636 0.33333333 0.36363636 0.40000000
[31] 0.45454545 0.16666667 0.18181818 0.20000000 0.27272727 0.22222222
[37] 0.27272727 0.30000000 0.36363636 0.25000000 0.27272727 0.30000000
[43] 0.36363636 0.33333333 0.36363636 0.40000000 0.45454545 0.28571429
[49] 0.27272727 0.30000000 0.36363636 0.33333333 0.36363636 0.40000000
[55] 0.45454545 0.37500000 0.36363636 0.40000000 0.45454545 0.44444444
[61] 0.45454545 0.50000000 0.54545455 0.20000000 0.22222222 0.25000000
[67] 0.33333333 0.28571429 0.33333333 0.37500000 0.44444444 0.33333333
[73] 0.33333333 0.37500000 0.44444444 0.42857143 0.44444444 0.50000000
[79] 0.55555556 0.40000000 0.37500000 0.42857143 0.50000000 0.50000000
[85] 0.50000000 0.57142857 0.62500000 0.60000000 0.66666667 0.80000000
[91] 1.00000000

$bound
 [1] 0.06335354 0.06272000 0.11403637 0.06194568 0.11403637 0.11150223
 [7] 0.15204849 0.06097778 0.11403637 0.11150223 0.15204849 0.10840494
[13] 0.15204849 0.14634667 0.17738991 0.05973334 0.11403637 0.11150223
[19] 0.15204849 0.10840494 0.15204849 0.14634667 0.17738991 0.10453334
[25] 0.15204849 0.14634667 0.17738991 0.13937778 0.17738991 0.16725334
[31] 0.19006061 0.05807408 0.11403637 0.11150223 0.15204849 0.10840494
[37] 0.15204849 0.14634667 0.17738991 0.10453334 0.15204849 0.14634667
[43] 0.17738991 0.13937778 0.17738991 0.16725334 0.19006061 0.09955556
[49] 0.15204849 0.14634667 0.17738991 0.13937778 0.17738991 0.16725334
[55] 0.19006061 0.13066667 0.17738991 0.16725334 0.19006061 0.15486420
[61] 0.19006061 0.17422223 0.19006061 0.05575111 0.10840494 0.10453334
[67] 0.13937778 0.09955556 0.13937778 0.13066667 0.15486420 0.09291852
[73] 0.13937778 0.13066667 0.15486420 0.11946667 0.15486420 0.13937778
[79] 0.15486420 0.08362667 0.13066667 0.11946667 0.13937778 0.10453334
[85] 0.13937778 0.11946667 0.13066667 0.08362667 0.09291852 0.05575111
[91] 0.00000000

> 
> 
> 
> cleanEx()
> nameEx("getMaxError")
> ### * getMaxError
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getMaxError
> ### Title: Determine an approximate CDF's maximum error.
> ### Aliases: getMaxError
> 
> ### ** Examples
> 
> getMaxError(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1))
> 
> 
> 
> cleanEx()
> nameEx("getMean")
> ### * getMean
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getMean
> ### Title: Calculate the private mean from the DP-CDF
> ### Aliases: getMean
> 
> ### ** Examples
> 
> getMean(c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1), c(1,10), 1)
[1] 7.5
> 
> 
> 
> cleanEx()
> nameEx("horzdiffat25")
> ### * horzdiffat25
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: horzdiffat25
> ### Title: Determine the distance between the .25 quantile values returned
> ###   by two CDFs.
> ### Aliases: horzdiffat25
> 
> ### ** Examples
> 
> horzdiffat25(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), 
+  c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1),c(1,10), 1)
[1] 0
> 
> 
> 
> cleanEx()
> nameEx("horzdiffat75")
> ### * horzdiffat75
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: horzdiffat75
> ### Title: Determine the distance between the .75 quantile values returned
> ###   by two CDFs.
> ### Aliases: horzdiffat75
> 
> ### ** Examples
> 
> horzdiffat75(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1),
+             c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1),c(1,10), 1)
[1] 8
> 
> 
> 
> cleanEx()
> nameEx("horzdiffatMed")
> ### * horzdiffatMed
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: horzdiffatMed
> ### Title: Determine the distance between the median values returned by two
> ###   CDFs.
> ### Aliases: horzdiffatMed
> 
> ### ** Examples
> 
> horzdiffatMed(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), 
+    c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1),c(1,10), 1)
[1] 5
> 
> 
> 
> cleanEx()
> nameEx("horzdiffatQuantile")
> ### * horzdiffatQuantile
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: horzdiffatQuantile
> ### Title: Determine the distance between the quantile values returned by
> ###   two CDFs.
> ### Aliases: horzdiffatQuantile
> 
> ### ** Examples
> 
> diffatQuantile(c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1), 
+    c(.1,.2,.3,.3,.3,.3,.3,.3,.4,1),c(1,10), 1, .05)
 ----------- FAILURE REPORT -------------- 
 --- srcref --- 
 at /var/scratch2/tomas/tmp/Rtmp0v6GrF/R.INSTALL240a2c59d333/CDF.PSIdekick/R/CDFtestingSuite.R#269: 
 --- if/while statement is in package --- 
CDF.PSIdekick
 --- call (currently evaluated) --- 
diffatQuantile(c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 
    1), c(0.1, 0.2, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 1), c(1, 
    10), 1, 0.05)
 --- R stacktrace ---
where 1: diffatQuantile(c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 
    1), c(0.1, 0.2, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 1), c(1, 
    10), 1, 0.05)

 --- value of length: 2 type: logical ---
[1] FALSE FALSE
 --- function (currently evaluated)--- 
function(Y, est, quantile=0.5,...) {
xY <- c()
xest <- c()
#for storing the real quantile value and the corresponding estimate value
tempvector <- c(0,0)  
#locate the quantile in the CDF vector using the index, and store that value
# the median of quantile values must be found in the case of non-monotonic CDFs
if (min(Y-quantile)<0){
  for (i in 2:(length(Y)-1)) {  
    if ((Y[i]-quantile) >=0)  {
      if ((Y[i-1] -quantile) <0 ){
      xY[length(xY)+1] <- Y[i] 
      tempvector[1] <- median(xY)
      }
    }
  }
}
else{
  tempvector[1]<-Y[1]
}
  # do the same for the private-CDF vector
  if (min(est-quantile)<0){
  for (i in 2:(length(est)-1)) {  
    if ((est[i]-quantile) >=0)  {
      if ((est[i-1] -quantile) <0 ){
     xest[length(xest)+1] <- est[i] 
     tempvector[2] <- median(xest) 
      }
    }
  }
}
else{
  tempvector[2] <-est[1]
}
#find the absolute difference
diff <- abs(tempvector[2] - tempvector[1])
return(diff)
}
<bytecode: 0x51f25e0>
<environment: namespace:CDF.PSIdekick>
 --- function (body) search ---
Function diffatQuantile in namespace CDF.PSIdekick has this body.
 ----------- END FAILURE REPORT -------------- 
Fatal error: the condition has length > 1 and only the first element will be used XXXXXX
