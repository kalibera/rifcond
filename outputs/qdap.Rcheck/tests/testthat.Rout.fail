
R Under development (unstable) (2018-01-22 r74151) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("testthat")
> library("qdap")
Loading required package: qdapDictionaries
Loading required package: qdapRegex
Loading required package: qdapTools
Loading required package: RColorBrewer

Attaching package: 'qdap'

The following object is masked from 'package:testthat':

    %>%

The following object is masked from 'package:base':

    Filter

> 
> 
> test_check("qdap")
 ----------- FAILURE REPORT -------------- 
 --- srcref --- 
 at /var/scratch2/tomas/tmp/RtmpTpmbDi/R.INSTALL378a2133b19d/qdap/R/term.count.R#6: 
 --- if/while statement is in package --- 
qdap
 --- call (currently evaluated) --- 
withCallingHandlers(expr, warning = function(w) invokeRestart("muffleWarning"))
 --- R stacktrace ---
where 1: withCallingHandlers(expr, warning = function(w) invokeRestart("muffleWarning"))
where 2: suppressWarnings(if (is.na(str) | length(p) == 1 & p < 1) {
    0
} else {
    length(p)
})
where 3: tester(x, str)
where 4: FUN(X[[i]], ...)
where 5: lapply(X = X, FUN = FUN, ...)
where 6: sapply(mat, function(x) tester(x, str))
where 7 at /var/scratch2/tomas/tmp/RtmpTpmbDi/R.INSTALL378a2133b19d/qdap/R/termco.h.R#7: term.count(tolower(x), mat = tolower(match.string))
where 8: FUN(X[[i]], ...)
where 9 at /var/scratch2/tomas/tmp/RtmpTpmbDi/R.INSTALL378a2133b19d/qdap/R/termco.h.R#7: lapply(text.var, function(x) term.count(tolower(x), mat = tolower(match.string)))
where 10 at /var/scratch2/tomas/tmp/RtmpTpmbDi/R.INSTALL378a2133b19d/qdap/R/termco.R#429: termco.h(text.var = strip(text.var, lower.case = FALSE, char.keep = char.keep, 
    digit.remove = digit.remove, apostrophe.remove = apostrophe.remove, 
    ...), match.string = match.string, grouping.var = grouping.var, 
    ignore.case = ignore.case)
where 11 at /var/scratch2/tomas/tmp/RtmpTpmbDi/R.INSTALL378a2133b19d/qdap/R/termco.R#297: termco_d(text.var = text.var, grouping.var = grouping.var, match.string = ML, 
    ignore.case = ignore.case, percent = percent, apostrophe.remove = apostrophe.remove, 
    char.keep = char.keep, digit.remove = FALSE, digits = digits, 
    zero.replace = zero.replace, ...)
where 12: termco(state, list(sex, adult), words)
where 13: eval(substitute(expr), data, enclos = parent.frame())
where 14: eval(substitute(expr), data, enclos = parent.frame())
where 15: with.default(DATA, termco(state, list(sex, adult), words))
where 16 at testthat/test-adjacency_matrix.R#6: with(DATA, termco(state, list(sex, adult), words))
where 17: eval(code, test_env)
where 18: eval(code, test_env)
where 19: withCallingHandlers({
    eval(code, test_env)
    if (!handled && !is.null(test)) {
        skip_empty()
    }
}, expectation = handle_expectation, skip = handle_skip, warning = handle_warning, 
    message = handle_message, error = handle_error)
where 20: doTryCatch(return(expr), name, parentenv, handler)
where 21: tryCatchOne(expr, names, parentenv, handlers[[1L]])
where 22: tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
where 23: doTryCatch(return(expr), name, parentenv, handler)
where 24: tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), 
    names[nh], parentenv, handlers[[nh]])
where 25: tryCatchList(expr, classes, parentenv, handlers)
where 26: tryCatch(withCallingHandlers({
    eval(code, test_env)
    if (!handled && !is.null(test)) {
        skip_empty()
    }
}, expectation = handle_expectation, skip = handle_skip, warning = handle_warning, 
    message = handle_message, error = handle_error), error = handle_fatal, 
    skip = function(e) {
    })
where 27 at /var/scratch2/tomas/tmp/Rtmpri1Vbr/R.INSTALLb8033c63809/testthat/R/test-that.R#31: test_code(desc, code, env = parent.frame())
where 28 at testthat/test-adjacency_matrix.R#3: test_that("adjacency_matrix gives desired output", {
    words <- c(" you", " the", "it", "oo")
    Terms <- with(DATA, termco(state, list(sex, adult), words))
    Terms
    adj <- adjacency_matrix(Terms)
    nms <- c("boolean", "adjacency", "shared", "sum")
    expect_equivalent(nms, names(adj))
    expect_true(is.matrix(adj$boolean))
    expect_true(all(dim(adj$boolean) == c(4, 4)))
    expect_false(isSymmetric(adj$boolean))
    expect_true(is.matrix(adj$adjacency))
    expect_true(all(dim(adj$adjacency) == c(4, 4)))
    expect_true(isSymmetric(adj$adjacency))
    expect_equivalent(diag(adj$adjacency), adj$sum)
    expect_true(is.matrix(adj$shared))
    expect_true(all(dim(adj$shared) == c(3, 3)))
    expect_false(isSymmetric(adj$shared))
    expect_true(all(sapply(adj$shared[upper.tri(adj$shared)], 
        is.na)))
})
where 29: eval(code, test_env)
where 30: eval(code, test_env)
where 31: withCallingHandlers({
    eval(code, test_env)
    if (!handled && !is.null(test)) {
        skip_empty()
    }
}, expectation = handle_expectation, skip = handle_skip, warning = handle_warning, 
    message = handle_message, error = handle_error)
where 32: doTryCatch(return(expr), name, parentenv, handler)
where 33: tryCatchOne(expr, names, parentenv, handlers[[1L]])
where 34: tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
where 35: doTryCatch(return(expr), name, parentenv, handler)
where 36: tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), 
    names[nh], parentenv, handlers[[nh]])
where 37: tryCatchList(expr, classes, parentenv, handlers)
where 38: tryCatch(withCallingHandlers({
    eval(code, test_env)
    if (!handled && !is.null(test)) {
        skip_empty()
    }
}, expectation = handle_expectation, skip = handle_skip, warning = handle_warning, 
    message = handle_message, error = handle_error), error = handle_fatal, 
    skip = function(e) {
    })
where 39: test_code(NULL, exprs, env)
where 40: source_file(path, new.env(parent = env), chdir = TRUE, wrap = wrap)
where 41 at /var/scratch2/tomas/tmp/Rtmpri1Vbr/R.INSTALLb8033c63809/testthat/R/reporter-zzz.R#53: force(code)
where 42: with_reporter(reporter = reporter, start_end_reporter = start_end_reporter, 
    {
        lister$start_file(basename(path))
        source_file(path, new.env(parent = env), chdir = TRUE, 
            wrap = wrap)
        end_context()
    })
where 43: FUN(X[[i]], ...)
where 44: lapply(paths, test_file, env = env, reporter = current_reporter, 
    start_end_reporter = FALSE, load_helpers = FALSE, wrap = wrap)
where 45 at /var/scratch2/tomas/tmp/Rtmpri1Vbr/R.INSTALLb8033c63809/testthat/R/reporter-zzz.R#53: force(code)
where 46 at /var/scratch2/tomas/tmp/Rtmpri1Vbr/R.INSTALLb8033c63809/testthat/R/test-files.R#25: with_reporter(reporter = current_reporter, results <- lapply(paths, 
    test_file, env = env, reporter = current_reporter, start_end_reporter = FALSE, 
    load_helpers = FALSE, wrap = wrap))
where 47 at /var/scratch2/tomas/tmp/Rtmpri1Vbr/R.INSTALLb8033c63809/testthat/R/test-directory.R#86: test_files(paths, reporter = reporter, env = env, stop_on_failure = stop_on_failure, 
    stop_on_warning = stop_on_warning, wrap = wrap)
where 48 at /var/scratch2/tomas/tmp/Rtmpri1Vbr/R.INSTALLb8033c63809/testthat/R/test-directory.R#190: test_dir(path = test_path, reporter = reporter, env = env, filter = filter, 
    ..., stop_on_failure = stop_on_failure, stop_on_warning = stop_on_warning, 
    wrap = wrap)
where 49 at /var/scratch2/tomas/tmp/Rtmpri1Vbr/R.INSTALLb8033c63809/testthat/R/test-directory.R#171: test_package_dir(package = package, test_path = test_path, filter = filter, 
    reporter = reporter, ..., stop_on_failure = stop_on_failure, 
    stop_on_warning = stop_on_warning, wrap = wrap)
where 50: test_check("qdap")

 --- value of length: 2 type: logical ---
[1] FALSE FALSE
 --- function (currently evaluated)--- 
function (expr, ...) 
{
    handlers <- list(...)
    classes <- names(handlers)
    parentenv <- parent.frame()
    if (length(classes) != length(handlers)) 
        stop("bad handler specification")
    .Internal(.addCondHands(classes, handlers, parentenv, NULL, 
        TRUE))
    expr
}
<bytecode: 0x22012d8>
<environment: namespace:base>
 --- function (body) search ---
Function withCallingHandlers in namespace base has this body.
 ----------- END FAILURE REPORT -------------- 
Fatal error: the condition has length > 1 and only the first element will be used XXXXXX
