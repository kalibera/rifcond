
R Under development (unstable) (2018-01-22 r74151) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "inferr"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('inferr')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("infer_binom_calc")
> ### * infer_binom_calc
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: infer_binom_calc
> ### Title: Binomial Test
> ### Aliases: infer_binom_calc binom_calc infer_binom_test binom_test
> 
> ### ** Examples
> 
> # using calculator
> infer_binom_calc(32, 13, prob = 0.5)
            Binomial Test              
 --------------------------------------
  Group    N     Obs. Prop    Exp. Prop 
 --------------------------------------
    0      19      0.59375        0.500 
    1      13      0.40625        0.500 
 --------------------------------------


                 Test Summary                 
 --------------------------------------------
  Tail              Prob             p-value  
 --------------------------------------------
  Lower    Pr(k <= 13)               0.188543 
  Upper    Pr(k >= 13)               0.892336 
  Two      Pr(k <= 13 or k >= 19)    0.377086 
 --------------------------------------------
> 
> # using data set
> infer_binom_test(as.factor(hsb$female), prob = 0.5)
             Binomial Test              
 ---------------------------------------
  Group     N     Obs. Prop    Exp. Prop 
 ---------------------------------------
    0       91        0.455        0.500 
    1      109        0.545        0.500 
 ---------------------------------------


                 Test Summary                  
 ---------------------------------------------
  Tail              Prob              p-value  
 ---------------------------------------------
  Lower    Pr(k <= 109)               0.910518 
  Upper    Pr(k >= 109)               0.114623 
  Two      Pr(k <= 91 or k >= 109)    0.229247 
 ---------------------------------------------
> 
> 
> 
> cleanEx()
> nameEx("infer_chisq_assoc_test")
> ### * infer_chisq_assoc_test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: infer_chisq_assoc_test
> ### Title: Chi Square Test of Association
> ### Aliases: infer_chisq_assoc_test chisq_test
> 
> ### ** Examples
> 
> infer_chisq_assoc_test(as.factor(hsb$female), as.factor(hsb$schtyp))
               Chi Square Statistics                 

Statistics                     DF    Value      Prob 
----------------------------------------------------
Chi-Square                     1    0.0470    0.8284
Likelihood Ratio Chi-Square    1    0.0471    0.8282
Continuity Adj. Chi-Square     1    0.0005    0.9822
Mantel-Haenszel Chi-Square     1    0.0468    0.8287
Phi Coefficient                     0.0153          
Contingency Coefficient             0.0153          
Cramer's V                          0.0153          
----------------------------------------------------
> 
> infer_chisq_assoc_test(as.factor(hsb$female), as.factor(hsb$ses))
               Chi Square Statistics                 

Statistics                     DF    Value      Prob 
----------------------------------------------------
Chi-Square                     2    4.5765    0.1014
Likelihood Ratio Chi-Square    2    4.6789    0.0964
Phi Coefficient                     0.1513          
Contingency Coefficient             0.1496          
Cramer's V                          0.1513          
----------------------------------------------------
> 
> 
> 
> cleanEx()
> nameEx("infer_chisq_gof_test")
> ### * infer_chisq_gof_test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: infer_chisq_gof_test
> ### Title: Chi Square Goodness of Fit Test
> ### Aliases: infer_chisq_gof_test chisq_gof
> 
> ### ** Examples
> 
> infer_chisq_gof_test(as.factor(hsb$race), c(20, 20, 20, 140))
    Test Statistics     
-----------------------
Chi-Square       5.0286 
DF                    3 
Pr > Chi Sq      0.1697 
Sample Size         200 

                         Variable: race)                          
-----------------------------------------------------------------
Category    Observed    Expected    % Deviation    Std. Residuals 
-----------------------------------------------------------------
   1           24          20          20.00            0.89      
   2           11          20         -45.00           -2.01      
   3           20          20           0.00            0.00      
   4          145         140           3.57            0.42      
-----------------------------------------------------------------
> 
> # apply continuity correction
> infer_chisq_gof_test(as.factor(hsb$race), c(20, 20, 20, 140), correct = TRUE)
    Test Statistics     
-----------------------
Chi-Square       4.3821 
DF                    3 
Pr > Chi Sq      0.2231 
Sample Size         200 

                         Variable: race)                          
-----------------------------------------------------------------
Category    Observed    Expected    % Deviation    Std. Residuals 
-----------------------------------------------------------------
   1           24          20          17.50            0.78      
   2           11          20         -47.50           -2.12      
   3           20          20          -2.50           -0.11      
   4          145         140           3.21            0.38      
-----------------------------------------------------------------
> 
> 
> 
> cleanEx()
> nameEx("infer_cochran_qtest")
> ### * infer_cochran_qtest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: infer_cochran_qtest
> ### Title: Cochran Q Test
> ### Aliases: infer_cochran_qtest cochran_test
> 
> ### ** Examples
> 
> infer_cochran_qtest(exam)
   Test Statistics     
----------------------
N                   15 
Cochran's Q       4.75 
df                   2 
p value          0.093 
----------------------
> 
> 
> 
> cleanEx()
> nameEx("infer_launch_shiny_app")
> ### * infer_launch_shiny_app
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: infer_launch_shiny_app
> ### Title: Launch Shiny App
> ### Aliases: infer_launch_shiny_app launch_inferr
> 
> ### ** Examples
> 
> ## Not run: 
> ##D infer_launch_shiny_app()
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("infer_levene_test")
> ### * infer_levene_test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: infer_levene_test
> ### Title: Levene's test for equality of variances
> ### Aliases: infer_levene_test infer_levene_test.default levene_test
> ###   infer_levene_test.lm infer_levene_test.formula
> 
> ### ** Examples
> 
> # using grouping variable
> infer_levene_test(hsb$read, group_var = hsb$race)
 ----------- FAILURE REPORT -------------- 
 --- srcref --- 
: 
 --- if/while statement is in package --- 
inferr
 --- call (currently evaluated) --- 
withCallingHandlers(expr, warning = function(w) invokeRestart("muffleWarning"))
 --- R stacktrace ---
where 1: withCallingHandlers(expr, warning = function(w) invokeRestart("muffleWarning"))
where 2 at /var/scratch2/tomas/tmp/Rtmpjxn4rJ/R.INSTALL2eee58762cf9/inferr/R/infer-levene-test.R#70: suppressWarnings(if (is.na(group_var)) {
    if (is.data.frame(variable)) {
        z <- as.list(variable)
    }
    else {
        z <- list(variable, ...)
    }
    ln <- z %>% map_int(length)
    ly <- seq_len(length(z))
    if (length(z) < 2) {
        stop("Please specify at least two variables.", call. = FALSE)
    }
    out <- gvar(ln, ly)
    variable <- unlist(z)
    group_var <- unlist(out)
} else {
    if (length(variable) != length(group_var)) {
        stop("Length of variable and group_var do not match.", 
            call. = FALSE)
    }
})
where 3 at /var/scratch2/tomas/tmp/Rtmpjxn4rJ/R.INSTALL2eee58762cf9/inferr/R/infer-levene-test.R#61: infer_levene_test.default(hsb$read, group_var = hsb$race)
where 4: infer_levene_test(hsb$read, group_var = hsb$race)

 --- value of length: 200 type: logical ---
  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [85] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [97] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[109] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[133] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[145] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[157] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[169] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[181] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[193] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 --- function (currently evaluated)--- 
function (expr, ...) 
{
    handlers <- list(...)
    classes <- names(handlers)
    parentenv <- parent.frame()
    if (length(classes) != length(handlers)) 
        stop("bad handler specification")
    .Internal(.addCondHands(classes, handlers, parentenv, NULL, 
        TRUE))
    expr
}
<bytecode: 0x22bab20>
<environment: namespace:base>
 --- function (body) search ---
Function withCallingHandlers in namespace base has this body.
 ----------- END FAILURE REPORT -------------- 
Fatal error: the condition has length > 1 and only the first element will be used XXXXXX
