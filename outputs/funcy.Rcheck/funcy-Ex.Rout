 --- srcref --- 
 at /tmp/RtmpEPvTZA/R.INSTALL21d932b797fc5/sm/R/regression.r#1055: 
 --- call (function) --- 
sm.weight2(x, opt$eval.points, h, weights = weights, options = opt)
 --- stacktrace ---
where 1 at /tmp/RtmpEPvTZA/R.INSTALL21d932b797fc5/sm/R/regression.r#272: sm.weight2(x, opt$eval.points, h, weights = weights, options = opt)
where 2: sm.regression.2d(x, y, h, model, weights, rawdata, options = opt)
where 3: smoothFct2D(x = cov.timeIn, y = cov.raw, h = hcov, eval.points = cov.timeOut, 
    weights = rep(1, length(cov.raw)), poly.index = c(1, 2), 
    eval.grid = FALSE, display = "none")
where 4: withCallingHandlers(expr, warning = function(w) invokeRestart("muffleWarning"))
where 5 at /tmp/RtmpMc7x3O/R.INSTALL1d64e10850861/funcy/R/funPrinComp.R#127: suppressWarnings(smoothFct2D(x = cov.timeIn, y = cov.raw, h = hcov, 
    eval.points = cov.timeOut, weights = rep(1, length(cov.raw)), 
    poly.index = c(1, 2), eval.grid = FALSE, display = "none")$estimate)
where 6 at /tmp/RtmpMc7x3O/R.INSTALL1d64e10850861/funcy/R/funPrinComp.R#20: fpc(Yin = Yin, Tin = Tin, Tout = NULL, isobs = isobs, dimBase = dimBase, 
    fpcCtrl = fpcCtrl, reg = reg)
where 7: fpca(Data(ds))

 --- value of length: 2 type: logical ---
[1] FALSE FALSE
 --- function --- 
function (x, eval.points, h, cross = FALSE, weights = rep(1, nrow(x)),
    options = list()) {

    opt <- sm.options(options)
    if (all(is.na(opt$period))) opt$period <- rep(NA, 2)
    replace.na(opt, hmult, 1)
    replace.na(opt, h.weights, rep(1, nrow(x)))
    replace.na(opt, poly.index, 1)
    poly.index <- opt$poly.index
    h.weights  <- opt$h.weights
    hmult      <- opt$hmult
    n          <- nrow(x)
    ne         <- nrow(eval.points)

    wd1 <- matrix(rep(eval.points[, 1], rep(n, ne)), ncol = n, byrow = TRUE)
    wd1 <- wd1 - matrix(rep(x[, 1], ne), ncol = n, byrow = TRUE)
    if (("hw.eval" %in% names(opt)) & (opt$hw.eval = TRUE))
       hw  <- matrix(rep(h.weights, n),  ncol = n)
    else
       hw  <- matrix(rep(h.weights, ne), ncol = n, byrow = TRUE)
    if (!is.na(opt$period[1])) 
       w <- exp(cos(2 * pi * wd1 / opt$period[1]) / (h[1] * hmult * hw))
    else
       w <- exp(-0.5 * (wd1 / (h[1] * hmult * hw))^2)
    wd2 <- matrix(rep(eval.points[, 2], rep(n, ne)), ncol = n, byrow = TRUE)
    wd2 <- wd2 - matrix(rep(x[, 2], ne), ncol = n, byrow = TRUE)
    if (!is.na(opt$period[2])) 
       w <- w * exp(cos(2 * pi * wd2 / opt$period[2]) / (h[2] * hmult * hw))
    else
       w <- w * exp(-0.5 * (wd2 / (h[2] * hmult * hw))^2)
    w <- w * matrix(rep(weights, ne), ncol = n, byrow = TRUE)
    
    if (cross)
        diag(w) <- 0

    if ((opt$poly.index == 0) | (sum(is.na(opt$period)) == 0)) {
        den <- w %*% rep(1, n)
        w   <- w/matrix(rep(den, n), ncol = n)
        }
    else if ((opt$poly.index == 1) & (sum(is.na(opt$period)) == 1)) {
    	if (is.na(opt$period[2])) wd1 <- wd2
    	s0 <- w %*% rep(1, n)
        s1 <- (w * wd1) %*% rep(1, n)
        s2 <- (w * wd1^2) %*% rep(1, n)
        w  <- w * (matrix(rep(s2, n), ncol = n) - 
                 wd1 * matrix(rep(s1, n), ncol = n))
        w  <- w / (matrix(rep(s2, n), ncol = n) * 
                   matrix(rep(s0, n), ncol = n) - matrix(rep(s1, n), ncol = n)^2)
        }
    else {
        a11 <- w %*% rep(1, n)
        a12 <- (w * wd1) %*% rep(1, n)
        a13 <- (w * wd2) %*% rep(1, n)
        a22 <- (w * wd1^2) %*% rep(1, n)
        a23 <- (w * wd1 * wd2) %*% rep(1, n)
        a33 <- (w * wd2^2) %*% rep(1, n)
        d   <- a22 * a33 - a23^2
        b1  <- 1/(a11 - ((a12 * a33 - a13 * a23) * a12 + (a13 *
                  a22 - a12 * a23) * a13)/d)
        b2  <- (a13 * a23 - a12 * a33) * b1/d
        b3  <- (a12 * a23 - a13 * a22) * b1/d
        wt  <- matrix(rep(b1, n), ncol = n)
        wt  <- wt + matrix(rep(b2, n), ncol = n) * wd1
        wt  <- wt + matrix(rep(b3, n), ncol = n) * wd2
        w   <- wt * w
    }
    w
}
<bytecode: 0x1aeda510>
<environment: namespace:sm>
 --- function (body) search ---
Function sm.weight2 in namespace sm has this body.
