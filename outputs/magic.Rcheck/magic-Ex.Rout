
R Under development (unstable) (2018-01-22 r74151) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "magic"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('magic')
Loading required package: abind
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("Frankenstein")
> ### * Frankenstein
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Frankenstein
> ### Title: A perfect magic cube due to Frankenstein
> ### Aliases: Frankenstein
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(Frankenstein)
> is.perfect(Frankenstein)
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("Ollerenshaw")
> ### * Ollerenshaw
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Ollerenshaw
> ### Title: A most perfect square due to Ollerenshaw
> ### Aliases: Ollerenshaw
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(Ollerenshaw)
> is.mostperfect(Ollerenshaw)
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("adiag")
> ### * adiag
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: adiag
> ### Title: Binds arrays corner-to-corner
> ### Aliases: adiag
> ### Keywords: array
> 
> ### ** Examples
> 
>  a <- array( 1,c(2,2))
>  b <- array(-1,c(2,2))
>  adiag(a,b)
     [,1] [,2] [,3] [,4]
[1,]    1    1    0    0
[2,]    1    1    0    0
[3,]    0    0   -1   -1
[4,]    0    0   -1   -1
> 
>  ## dropped dimensions can count:
> 
>  b2 <- b1 <- b
>  dim(a) <- c(2,1,2)
>  dim(b1) <- c(2,2,1)
>  dim(b2) <- c(1,2,2)
> 
>  dim(adiag(a,b1))
[1] 4 3 3
>  dim(adiag(a,b2))
[1] 3 3 4
> 
> ## dimnames are preserved if not null:
> 
> a <- matrix(1,2,2,dimnames=list(col=c("red","blue"),size=c("big","small"))) 
> b <- 8
> dim(b) <- c(1,1)
> dimnames(b) <- list(col=c("green"),size=c("tiny"))
> adiag(a,b)   #dimnames preserved
       size
col     big small tiny
  red     1     1    0
  blue    1     1    0
  green   0     0    8
> adiag(a,8)   #dimnames lost because second argument has none.
     [,1] [,2] [,3]
[1,]    1    1    0
[2,]    1    1    0
[3,]    0    0    8
> 
> ## non scalar values for pad can be confusing:
> q <- matrix(0,3,3)
> adiag(q,q,pad=1:4)
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,]    0    0    0    3    1    3
[2,]    0    0    0    4    2    4
[3,]    0    0    0    1    3    1
[4,]    4    2    4    0    0    0
[5,]    1    3    1    0    0    0
[6,]    2    4    2    0    0    0
> 
> ## following example should make the pattern clear:
> adiag(q,q,pad=1:36)
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,]    0    0    0   19   25   31
[2,]    0    0    0   20   26   32
[3,]    0    0    0   21   27   33
[4,]    4   10   16    0    0    0
[5,]    5   11   17    0    0    0
[6,]    6   12   18    0    0    0
> 
> 
> # Now, a use for arrays with dimensions of zero extent:
> z <- array(dim=c(0,3))
> colnames(z) <- c("foo","bar","baz")
> 
> adiag(a,z)        # Observe how this has
      size
col    big small foo bar baz
  red    1     1   0   0   0
  blue   1     1   0   0   0
>                   # added no (ie zero) rows to "a" but
>                   # three extra columns filled with the pad value
> 
> adiag(a,t(z))
      size
col    big small
  red    1     1
  blue   1     1
  foo    0     0
  bar    0     0
  baz    0     0
> adiag(z,t(z))     # just the pad value
    foo bar baz
foo   0   0   0
bar   0   0   0
baz   0   0   0
> 
> 
> 
> 
> cleanEx()
> nameEx("allsubhypercubes")
> ### * allsubhypercubes
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: allsubhypercubes
> ### Title: Subhypercubes of magic hypercubes
> ### Aliases: allsubhypercubes
> ### Keywords: array
> 
> ### ** Examples
> 
>   a <- magichypercube.4n(1,d=4)
>   allsubhypercubes(a)
$`i,i,,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]    1  192  128  193
[2,]  240   81  145   48
[3,]  224   97  161   32
[4,]   49  144   80  241

, , 2

     [,1] [,2] [,3] [,4]
[1,]    6  187  123  198
[2,]  235   86  150   43
[3,]  219  102  166   27
[4,]   54  139   75  246

, , 3

     [,1] [,2] [,3] [,4]
[1,]   11  182  118  203
[2,]  230   91  155   38
[3,]  214  107  171   22
[4,]   59  134   70  251

, , 4

     [,1] [,2] [,3] [,4]
[1,]   16  177  113  208
[2,]  225   96  160   33
[3,]  209  112  176   17
[4,]   64  129   65  256


$`n-i+1,i,,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]    4  189  125  196
[2,]  237   84  148   45
[3,]  221  100  164   29
[4,]   52  141   77  244

, , 2

     [,1] [,2] [,3] [,4]
[1,]    7  186  122  199
[2,]  234   87  151   42
[3,]  218  103  167   26
[4,]   55  138   74  247

, , 3

     [,1] [,2] [,3] [,4]
[1,]   10  183  119  202
[2,]  231   90  154   39
[3,]  215  106  170   23
[4,]   58  135   71  250

, , 4

     [,1] [,2] [,3] [,4]
[1,]   13  180  116  205
[2,]  228   93  157   36
[3,]  212  109  173   20
[4,]   61  132   68  253


$`i,n-i+1,,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]   13  180  116  205
[2,]  228   93  157   36
[3,]  212  109  173   20
[4,]   61  132   68  253

, , 2

     [,1] [,2] [,3] [,4]
[1,]   10  183  119  202
[2,]  231   90  154   39
[3,]  215  106  170   23
[4,]   58  135   71  250

, , 3

     [,1] [,2] [,3] [,4]
[1,]    7  186  122  199
[2,]  234   87  151   42
[3,]  218  103  167   26
[4,]   55  138   74  247

, , 4

     [,1] [,2] [,3] [,4]
[1,]    4  189  125  196
[2,]  237   84  148   45
[3,]  221  100  164   29
[4,]   52  141   77  244


$`n-i+1,n-i+1,,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]   16  177  113  208
[2,]  225   96  160   33
[3,]  209  112  176   17
[4,]   64  129   65  256

, , 2

     [,1] [,2] [,3] [,4]
[1,]   11  182  118  203
[2,]  230   91  155   38
[3,]  214  107  171   22
[4,]   59  134   70  251

, , 3

     [,1] [,2] [,3] [,4]
[1,]    6  187  123  198
[2,]  235   86  150   43
[3,]  219  102  166   27
[4,]   54  139   75  246

, , 4

     [,1] [,2] [,3] [,4]
[1,]    1  192  128  193
[2,]  240   81  145   48
[3,]  224   97  161   32
[4,]   49  144   80  241


$`i,,i,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]    1  192  128  193
[2,]  252   69  133   60
[3,]  248   73  137   56
[4,]   13  180  116  205

, , 2

     [,1] [,2] [,3] [,4]
[1,]   18  175  111  210
[2,]  235   86  150   43
[3,]  231   90  154   39
[4,]   30  163   99  222

, , 3

     [,1] [,2] [,3] [,4]
[1,]   35  158   94  227
[2,]  218  103  167   26
[3,]  214  107  171   22
[4,]   47  146   82  239

, , 4

     [,1] [,2] [,3] [,4]
[1,]   52  141   77  244
[2,]  201  120  184    9
[3,]  197  124  188    5
[4,]   64  129   65  256


$`n-i+1,,i,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]    4  189  125  196
[2,]  249   72  136   57
[3,]  245   76  140   53
[4,]   16  177  113  208

, , 2

     [,1] [,2] [,3] [,4]
[1,]   19  174  110  211
[2,]  234   87  151   42
[3,]  230   91  155   38
[4,]   31  162   98  223

, , 3

     [,1] [,2] [,3] [,4]
[1,]   34  159   95  226
[2,]  219  102  166   27
[3,]  215  106  170   23
[4,]   46  147   83  238

, , 4

     [,1] [,2] [,3] [,4]
[1,]   49  144   80  241
[2,]  204  117  181   12
[3,]  200  121  185    8
[4,]   61  132   68  253


$`,i,i,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]    1  192  128  193
[2,]  255   66  130   63
[3,]  254   67  131   62
[4,]    4  189  125  196

, , 2

     [,1] [,2] [,3] [,4]
[1,]   21  172  108  213
[2,]  235   86  150   43
[3,]  234   87  151   42
[4,]   24  169  105  216

, , 3

     [,1] [,2] [,3] [,4]
[1,]   41  152   88  233
[2,]  215  106  170   23
[3,]  214  107  171   22
[4,]   44  149   85  236

, , 4

     [,1] [,2] [,3] [,4]
[1,]   61  132   68  253
[2,]  195  126  190    3
[3,]  194  127  191    2
[4,]   64  129   65  256


$`i,i,i,`
     [,1] [,2] [,3] [,4]
[1,]    1  235  214   64
[2,]  192   86  107  129
[3,]  128  150  171   65
[4,]  193   43   22  256

$`n-i+1,i,i,`
     [,1] [,2] [,3] [,4]
[1,]    4  234  215   61
[2,]  189   87  106  132
[3,]  125  151  170   68
[4,]  196   42   23  253

$`,n-i+1,i,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]   13  180  116  205
[2,]  243   78  142   51
[3,]  242   79  143   50
[4,]   16  177  113  208

, , 2

     [,1] [,2] [,3] [,4]
[1,]   25  168  104  217
[2,]  231   90  154   39
[3,]  230   91  155   38
[4,]   28  165  101  220

, , 3

     [,1] [,2] [,3] [,4]
[1,]   37  156   92  229
[2,]  219  102  166   27
[3,]  218  103  167   26
[4,]   40  153   89  232

, , 4

     [,1] [,2] [,3] [,4]
[1,]   49  144   80  241
[2,]  207  114  178   15
[3,]  206  115  179   14
[4,]   52  141   77  244


$`i,n-i+1,i,`
     [,1] [,2] [,3] [,4]
[1,]   13  231  218   52
[2,]  180   90  103  141
[3,]  116  154  167   77
[4,]  205   39   26  244

$`n-i+1,n-i+1,i,`
     [,1] [,2] [,3] [,4]
[1,]   16  230  219   49
[2,]  177   91  102  144
[3,]  113  155  166   80
[4,]  208   38   27  241

$`i,,n-i+1,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]   49  144   80  241
[2,]  204  117  181   12
[3,]  200  121  185    8
[4,]   61  132   68  253

, , 2

     [,1] [,2] [,3] [,4]
[1,]   34  159   95  226
[2,]  219  102  166   27
[3,]  215  106  170   23
[4,]   46  147   83  238

, , 3

     [,1] [,2] [,3] [,4]
[1,]   19  174  110  211
[2,]  234   87  151   42
[3,]  230   91  155   38
[4,]   31  162   98  223

, , 4

     [,1] [,2] [,3] [,4]
[1,]    4  189  125  196
[2,]  249   72  136   57
[3,]  245   76  140   53
[4,]   16  177  113  208


$`n-i+1,,n-i+1,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]   52  141   77  244
[2,]  201  120  184    9
[3,]  197  124  188    5
[4,]   64  129   65  256

, , 2

     [,1] [,2] [,3] [,4]
[1,]   35  158   94  227
[2,]  218  103  167   26
[3,]  214  107  171   22
[4,]   47  146   82  239

, , 3

     [,1] [,2] [,3] [,4]
[1,]   18  175  111  210
[2,]  235   86  150   43
[3,]  231   90  154   39
[4,]   30  163   99  222

, , 4

     [,1] [,2] [,3] [,4]
[1,]    1  192  128  193
[2,]  252   69  133   60
[3,]  248   73  137   56
[4,]   13  180  116  205


$`,i,n-i+1,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]   49  144   80  241
[2,]  207  114  178   15
[3,]  206  115  179   14
[4,]   52  141   77  244

, , 2

     [,1] [,2] [,3] [,4]
[1,]   37  156   92  229
[2,]  219  102  166   27
[3,]  218  103  167   26
[4,]   40  153   89  232

, , 3

     [,1] [,2] [,3] [,4]
[1,]   25  168  104  217
[2,]  231   90  154   39
[3,]  230   91  155   38
[4,]   28  165  101  220

, , 4

     [,1] [,2] [,3] [,4]
[1,]   13  180  116  205
[2,]  243   78  142   51
[3,]  242   79  143   50
[4,]   16  177  113  208


$`i,i,n-i+1,`
     [,1] [,2] [,3] [,4]
[1,]   49  219  230   16
[2,]  144  102   91  177
[3,]   80  166  155  113
[4,]  241   27   38  208

$`n-i+1,i,n-i+1,`
     [,1] [,2] [,3] [,4]
[1,]   52  218  231   13
[2,]  141  103   90  180
[3,]   77  167  154  116
[4,]  244   26   39  205

$`,n-i+1,n-i+1,`
, , 1

     [,1] [,2] [,3] [,4]
[1,]   61  132   68  253
[2,]  195  126  190    3
[3,]  194  127  191    2
[4,]   64  129   65  256

, , 2

     [,1] [,2] [,3] [,4]
[1,]   41  152   88  233
[2,]  215  106  170   23
[3,]  214  107  171   22
[4,]   44  149   85  236

, , 3

     [,1] [,2] [,3] [,4]
[1,]   21  172  108  213
[2,]  235   86  150   43
[3,]  234   87  151   42
[4,]   24  169  105  216

, , 4

     [,1] [,2] [,3] [,4]
[1,]    1  192  128  193
[2,]  255   66  130   63
[3,]  254   67  131   62
[4,]    4  189  125  196


$`i,n-i+1,n-i+1,`
     [,1] [,2] [,3] [,4]
[1,]   61  215  234    4
[2,]  132  106   87  189
[3,]   68  170  151  125
[4,]  253   23   42  196

$`n-i+1,n-i+1,n-i+1,`
     [,1] [,2] [,3] [,4]
[1,]   64  214  235    1
[2,]  129  107   86  192
[3,]   65  171  150  128
[4,]  256   22   43  193

$`i,,,i`
, , 1

     [,1] [,2] [,3] [,4]
[1,]    1  240  224   49
[2,]  252   21   37  204
[3,]  248   25   41  200
[4,]   13  228  212   61

, , 2

     [,1] [,2] [,3] [,4]
[1,]   66  175  159  114
[2,]  187   86  102  139
[3,]  183   90  106  135
[4,]   78  163  147  126

, , 3

     [,1] [,2] [,3] [,4]
[1,]  131  110   94  179
[2,]  122  151  167   74
[3,]  118  155  171   70
[4,]  143   98   82  191

, , 4

     [,1] [,2] [,3] [,4]
[1,]  196   45   29  244
[2,]   57  216  232    9
[3,]   53  220  236    5
[4,]  208   33   17  256


$`n-i+1,,,i`
, , 1

     [,1] [,2] [,3] [,4]
[1,]    4  237  221   52
[2,]  249   24   40  201
[3,]  245   28   44  197
[4,]   16  225  209   64

, , 2

     [,1] [,2] [,3] [,4]
[1,]   67  174  158  115
[2,]  186   87  103  138
[3,]  182   91  107  134
[4,]   79  162  146  127

, , 3

     [,1] [,2] [,3] [,4]
[1,]  130  111   95  178
[2,]  123  150  166   75
[3,]  119  154  170   71
[4,]  142   99   83  190

, , 4

     [,1] [,2] [,3] [,4]
[1,]  193   48   32  241
[2,]   60  213  229   12
[3,]   56  217  233    8
[4,]  205   36   20  253


$`,i,,i`
, , 1

     [,1] [,2] [,3] [,4]
[1,]    1  240  224   49
[2,]  255   18   34  207
[3,]  254   19   35  206
[4,]    4  237  221   52

, , 2

     [,1] [,2] [,3] [,4]
[1,]   69  172  156  117
[2,]  187   86  102  139
[3,]  186   87  103  138
[4,]   72  169  153  120

, , 3

     [,1] [,2] [,3] [,4]
[1,]  137  104   88  185
[2,]  119  154  170   71
[3,]  118  155  171   70
[4,]  140  101   85  188

, , 4

     [,1] [,2] [,3] [,4]
[1,]  205   36   20  253
[2,]   51  222  238    3
[3,]   50  223  239    2
[4,]  208   33   17  256


$`i,i,,i`
     [,1] [,2] [,3] [,4]
[1,]    1  187  118  208
[2,]  240   86  155   33
[3,]  224  102  171   17
[4,]   49  139   70  256

$`n-i+1,i,,i`
     [,1] [,2] [,3] [,4]
[1,]    4  186  119  205
[2,]  237   87  154   36
[3,]  221  103  170   20
[4,]   52  138   71  253

$`,n-i+1,,i`
, , 1

     [,1] [,2] [,3] [,4]
[1,]   13  228  212   61
[2,]  243   30   46  195
[3,]  242   31   47  194
[4,]   16  225  209   64

, , 2

     [,1] [,2] [,3] [,4]
[1,]   73  168  152  121
[2,]  183   90  106  135
[3,]  182   91  107  134
[4,]   76  165  149  124

, , 3

     [,1] [,2] [,3] [,4]
[1,]  133  108   92  181
[2,]  123  150  166   75
[3,]  122  151  167   74
[4,]  136  105   89  184

, , 4

     [,1] [,2] [,3] [,4]
[1,]  193   48   32  241
[2,]   63  210  226   15
[3,]   62  211  227   14
[4,]  196   45   29  244


$`i,n-i+1,,i`
     [,1] [,2] [,3] [,4]
[1,]   13  183  122  196
[2,]  228   90  151   45
[3,]  212  106  167   29
[4,]   61  135   74  244

$`n-i+1,n-i+1,,i`
     [,1] [,2] [,3] [,4]
[1,]   16  182  123  193
[2,]  225   91  150   48
[3,]  209  107  166   32
[4,]   64  134   75  241

$`,,i,i`
, , 1

     [,1] [,2] [,3] [,4]
[1,]    1  252  248   13
[2,]  255    6   10  243
[3,]  254    7   11  242
[4,]    4  249  245   16

, , 2

     [,1] [,2] [,3] [,4]
[1,]   81  172  168   93
[2,]  175   86   90  163
[3,]  174   87   91  162
[4,]   84  169  165   96

, , 3

     [,1] [,2] [,3] [,4]
[1,]  161   92   88  173
[2,]   95  166  170   83
[3,]   94  167  171   82
[4,]  164   89   85  176

, , 4

     [,1] [,2] [,3] [,4]
[1,]  241   12    8  253
[2,]   15  246  250    3
[3,]   14  247  251    2
[4,]  244    9    5  256


$`i,,i,i`
     [,1] [,2] [,3] [,4]
[1,]    1  175   94  244
[2,]  252   86  167    9
[3,]  248   90  171    5
[4,]   13  163   82  256

$`n-i+1,,i,i`
     [,1] [,2] [,3] [,4]
[1,]    4  174   95  241
[2,]  249   87  166   12
[3,]  245   91  170    8
[4,]   16  162   83  253

$`,i,i,i`
     [,1] [,2] [,3] [,4]
[1,]    1  172   88  253
[2,]  255   86  170    3
[3,]  254   87  171    2
[4,]    4  169   85  256

$`i,i,i,i`
[1]   1  86 171 256

$`n-i+1,i,i,i`
[1]   4  87 170 253

$`,n-i+1,i,i`
     [,1] [,2] [,3] [,4]
[1,]   13  168   92  241
[2,]  243   90  166   15
[3,]  242   91  167   14
[4,]   16  165   89  244

$`i,n-i+1,i,i`
[1]  13  90 167 244

$`n-i+1,n-i+1,i,i`
[1]  16  91 166 241

$`,,n-i+1,i`
, , 1

     [,1] [,2] [,3] [,4]
[1,]   49  204  200   61
[2,]  207   54   58  195
[3,]  206   55   59  194
[4,]   52  201  197   64

, , 2

     [,1] [,2] [,3] [,4]
[1,]   97  156  152  109
[2,]  159  102  106  147
[3,]  158  103  107  146
[4,]  100  153  149  112

, , 3

     [,1] [,2] [,3] [,4]
[1,]  145  108  104  157
[2,]  111  150  154   99
[3,]  110  151  155   98
[4,]  148  105  101  160

, , 4

     [,1] [,2] [,3] [,4]
[1,]  193   60   56  205
[2,]   63  198  202   51
[3,]   62  199  203   50
[4,]  196   57   53  208


$`i,,n-i+1,i`
     [,1] [,2] [,3] [,4]
[1,]   49  159  110  196
[2,]  204  102  151   57
[3,]  200  106  155   53
[4,]   61  147   98  208

$`n-i+1,,n-i+1,i`
     [,1] [,2] [,3] [,4]
[1,]   52  158  111  193
[2,]  201  103  150   60
[3,]  197  107  154   56
[4,]   64  146   99  205

$`,i,n-i+1,i`
     [,1] [,2] [,3] [,4]
[1,]   49  156  104  205
[2,]  207  102  154   51
[3,]  206  103  155   50
[4,]   52  153  101  208

$`i,i,n-i+1,i`
[1]  49 102 155 208

$`n-i+1,i,n-i+1,i`
[1]  52 103 154 205

$`,n-i+1,n-i+1,i`
     [,1] [,2] [,3] [,4]
[1,]   61  152  108  193
[2,]  195  106  150   63
[3,]  194  107  151   62
[4,]   64  149  105  196

$`i,n-i+1,n-i+1,i`
[1]  61 106 151 196

$`n-i+1,n-i+1,n-i+1,i`
[1]  64 107 150 193

$`i,,,n-i+1`
, , 1

     [,1] [,2] [,3] [,4]
[1,]  193   48   32  241
[2,]   60  213  229   12
[3,]   56  217  233    8
[4,]  205   36   20  253

, , 2

     [,1] [,2] [,3] [,4]
[1,]  130  111   95  178
[2,]  123  150  166   75
[3,]  119  154  170   71
[4,]  142   99   83  190

, , 3

     [,1] [,2] [,3] [,4]
[1,]   67  174  158  115
[2,]  186   87  103  138
[3,]  182   91  107  134
[4,]   79  162  146  127

, , 4

     [,1] [,2] [,3] [,4]
[1,]    4  237  221   52
[2,]  249   24   40  201
[3,]  245   28   44  197
[4,]   16  225  209   64


$`n-i+1,,,n-i+1`
, , 1

     [,1] [,2] [,3] [,4]
[1,]  196   45   29  244
[2,]   57  216  232    9
[3,]   53  220  236    5
[4,]  208   33   17  256

, , 2

     [,1] [,2] [,3] [,4]
[1,]  131  110   94  179
[2,]  122  151  167   74
[3,]  118  155  171   70
[4,]  143   98   82  191

, , 3

     [,1] [,2] [,3] [,4]
[1,]   66  175  159  114
[2,]  187   86  102  139
[3,]  183   90  106  135
[4,]   78  163  147  126

, , 4

     [,1] [,2] [,3] [,4]
[1,]    1  240  224   49
[2,]  252   21   37  204
[3,]  248   25   41  200
[4,]   13  228  212   61


$`,i,,n-i+1`
, , 1

     [,1] [,2] [,3] [,4]
[1,]  193   48   32  241
[2,]   63  210  226   15
[3,]   62  211  227   14
[4,]  196   45   29  244

, , 2

     [,1] [,2] [,3] [,4]
[1,]  133  108   92  181
[2,]  123  150  166   75
[3,]  122  151  167   74
[4,]  136  105   89  184

, , 3

     [,1] [,2] [,3] [,4]
[1,]   73  168  152  121
[2,]  183   90  106  135
[3,]  182   91  107  134
[4,]   76  165  149  124

, , 4

     [,1] [,2] [,3] [,4]
[1,]   13  228  212   61
[2,]  243   30   46  195
[3,]  242   31   47  194
[4,]   16  225  209   64


$`i,i,,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  193  123  182   16
[2,]   48  150   91  225
[3,]   32  166  107  209
[4,]  241   75  134   64

$`n-i+1,i,,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  196  122  183   13
[2,]   45  151   90  228
[3,]   29  167  106  212
[4,]  244   74  135   61

$`,n-i+1,,n-i+1`
, , 1

     [,1] [,2] [,3] [,4]
[1,]  205   36   20  253
[2,]   51  222  238    3
[3,]   50  223  239    2
[4,]  208   33   17  256

, , 2

     [,1] [,2] [,3] [,4]
[1,]  137  104   88  185
[2,]  119  154  170   71
[3,]  118  155  171   70
[4,]  140  101   85  188

, , 3

     [,1] [,2] [,3] [,4]
[1,]   69  172  156  117
[2,]  187   86  102  139
[3,]  186   87  103  138
[4,]   72  169  153  120

, , 4

     [,1] [,2] [,3] [,4]
[1,]    1  240  224   49
[2,]  255   18   34  207
[3,]  254   19   35  206
[4,]    4  237  221   52


$`i,n-i+1,,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  205  119  186    4
[2,]   36  154   87  237
[3,]   20  170  103  221
[4,]  253   71  138   52

$`n-i+1,n-i+1,,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  208  118  187    1
[2,]   33  155   86  240
[3,]   17  171  102  224
[4,]  256   70  139   49

$`,,i,n-i+1`
, , 1

     [,1] [,2] [,3] [,4]
[1,]  193   60   56  205
[2,]   63  198  202   51
[3,]   62  199  203   50
[4,]  196   57   53  208

, , 2

     [,1] [,2] [,3] [,4]
[1,]  145  108  104  157
[2,]  111  150  154   99
[3,]  110  151  155   98
[4,]  148  105  101  160

, , 3

     [,1] [,2] [,3] [,4]
[1,]   97  156  152  109
[2,]  159  102  106  147
[3,]  158  103  107  146
[4,]  100  153  149  112

, , 4

     [,1] [,2] [,3] [,4]
[1,]   49  204  200   61
[2,]  207   54   58  195
[3,]  206   55   59  194
[4,]   52  201  197   64


$`i,,i,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  193  111  158   52
[2,]   60  150  103  201
[3,]   56  154  107  197
[4,]  205   99  146   64

$`n-i+1,,i,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  196  110  159   49
[2,]   57  151  102  204
[3,]   53  155  106  200
[4,]  208   98  147   61

$`,i,i,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  193  108  152   61
[2,]   63  150  106  195
[3,]   62  151  107  194
[4,]  196  105  149   64

$`i,i,i,n-i+1`
[1] 193 150 107  64

$`n-i+1,i,i,n-i+1`
[1] 196 151 106  61

$`,n-i+1,i,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  205  104  156   49
[2,]   51  154  102  207
[3,]   50  155  103  206
[4,]  208  101  153   52

$`i,n-i+1,i,n-i+1`
[1] 205 154 103  52

$`n-i+1,n-i+1,i,n-i+1`
[1] 208 155 102  49

$`,,n-i+1,n-i+1`
, , 1

     [,1] [,2] [,3] [,4]
[1,]  241   12    8  253
[2,]   15  246  250    3
[3,]   14  247  251    2
[4,]  244    9    5  256

, , 2

     [,1] [,2] [,3] [,4]
[1,]  161   92   88  173
[2,]   95  166  170   83
[3,]   94  167  171   82
[4,]  164   89   85  176

, , 3

     [,1] [,2] [,3] [,4]
[1,]   81  172  168   93
[2,]  175   86   90  163
[3,]  174   87   91  162
[4,]   84  169  165   96

, , 4

     [,1] [,2] [,3] [,4]
[1,]    1  252  248   13
[2,]  255    6   10  243
[3,]  254    7   11  242
[4,]    4  249  245   16


$`i,,n-i+1,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  241   95  174    4
[2,]   12  166   87  249
[3,]    8  170   91  245
[4,]  253   83  162   16

$`n-i+1,,n-i+1,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  244   94  175    1
[2,]    9  167   86  252
[3,]    5  171   90  248
[4,]  256   82  163   13

$`,i,n-i+1,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  241   92  168   13
[2,]   15  166   90  243
[3,]   14  167   91  242
[4,]  244   89  165   16

$`i,i,n-i+1,n-i+1`
[1] 241 166  91  16

$`n-i+1,i,n-i+1,n-i+1`
[1] 244 167  90  13

$`,n-i+1,n-i+1,n-i+1`
     [,1] [,2] [,3] [,4]
[1,]  253   88  172    1
[2,]    3  170   86  255
[3,]    2  171   87  254
[4,]  256   85  169    4

$`i,n-i+1,n-i+1,n-i+1`
[1] 253 170  87   4

$`n-i+1,n-i+1,n-i+1,n-i+1`
[1] 256 171  86   1

> 
> 
> 
> cleanEx()
> nameEx("allsums")
> ### * allsums
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: allsums
> ### Title: Row, column, and two diagonal sums of arrays
> ### Aliases: allsums
> ### Keywords: array
> 
> ### ** Examples
> 
> allsums(magic(7))
$rowsums
[1] 175 175 175 175 175 175 175

$colsums
[1] 175 175 175 175 175 175 175

$majors
[1] 175 175 175 175 175 175 175

$minors
[1] 175 126  77  28 322 273 224

> allsums(magic(7),func=max)
$rowsums
[1] 49 43 44 45 46 47 48

$colsums
[1] 45 44 43 49 48 47 46

$majors
[1] 47 43 46 49 45 48 44

$minors
[1] 28 21 14  7 49 42 35

> 
> allsums(magic(7),func=range)
$rowsums
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]    2    3    4    5    6    7    1
[2,]   49   43   44   45   46   47   48

$colsums
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]    4    3    2    1    7    6    5
[2,]   45   44   43   49   48   47   46

$majors
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]    3    6    2    5    1    4    7
[2,]   47   43   46   49   45   48   44

$minors
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]   22   15    8    1   43   36   29
[2,]   28   21   14    7   49   42   35

> allsums(magic(7),func=function(x){x[1:2]})
$rowsums
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]   20   12    4   45   37   29   28
[2,]   11    3   44   36   35   27   19

$colsums
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]   20   11    2   49   40   31   22
[2,]   12    3   43   41   32   23   21

$majors
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]   20   11    2   49   40   31   22
[2,]    3   43   41   32   23   21   12

$minors
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]   22   20   11    2   49   40   31
[2,]   23   21   12    3   43   41   32

> 
> 
> allsums(magic(7),sort)
$rowsums
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]    2    3    4    5    6    7    1
[2,]   11   12   13   14    8    9   10
[3,]   20   21   15   16   17   18   19
[4,]   22   23   24   25   26   27   28
[5,]   31   32   33   34   35   29   30
[6,]   40   41   42   36   37   38   39
[7,]   49   43   44   45   46   47   48

$colsums
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]    4    3    2    1    7    6    5
[2,]   12   11   10    9    8   14   13
[3,]   20   19   18   17   16   15   21
[4,]   28   27   26   25   24   23   22
[5,]   29   35   34   33   32   31   30
[6,]   37   36   42   41   40   39   38
[7,]   45   44   43   49   48   47   46

$majors
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]    3    6    2    5    1    4    7
[2,]    8   11   14   10   13    9   12
[3,]   20   16   19   15   18   21   17
[4,]   25   28   24   27   23   26   22
[5,]   30   33   29   32   35   31   34
[6,]   42   38   41   37   40   36   39
[7,]   47   43   46   49   45   48   44

$minors
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]   22   15    8    1   43   36   29
[2,]   23   16    9    2   44   37   30
[3,]   24   17   10    3   45   38   31
[4,]   25   18   11    4   46   39   32
[5,]   26   19   12    5   47   40   33
[6,]   27   20   13    6   48   41   34
[7,]   28   21   14    7   49   42   35

>   # beware! compare apply(magic(7),1,sort) and apply(magic(7),2,sort)
> 
> 
> 
> 
> cleanEx()
> nameEx("apad")
> ### * apad
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: apad
> ### Title: Pad arrays
> ### Aliases: apad
> ### Keywords: array
> 
> ### ** Examples
> 
> 
> apad(1:10,4,method="mirror")
 [1]  1  2  3  4  5  6  7  8  9 10 10  9  8  7
> 
> 
> a <- matrix(1:30,5,6)
> 
> apad(a,c(4,4))
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
 [1,]    1    6   11   16   21   26   26   26   26    26
 [2,]    2    7   12   17   22   27   27   27   27    27
 [3,]    3    8   13   18   23   28   28   28   28    28
 [4,]    4    9   14   19   24   29   29   29   29    29
 [5,]    5   10   15   20   25   30   30   30   30    30
 [6,]    5   10   15   20   25   30   30   30   30    30
 [7,]    5   10   15   20   25   30   30   30   30    30
 [8,]    5   10   15   20   25   30   30   30   30    30
 [9,]    5   10   15   20   25   30   30   30   30    30
> apad(a,c(4,4),post=FALSE)
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
 [1,]    1    1    1    1    1    6   11   16   21    26
 [2,]    1    1    1    1    1    6   11   16   21    26
 [3,]    1    1    1    1    1    6   11   16   21    26
 [4,]    1    1    1    1    1    6   11   16   21    26
 [5,]    1    1    1    1    1    6   11   16   21    26
 [6,]    2    2    2    2    2    7   12   17   22    27
 [7,]    3    3    3    3    3    8   13   18   23    28
 [8,]    4    4    4    4    4    9   14   19   24    29
 [9,]    5    5    5    5    5   10   15   20   25    30
> 
> apad(a,1,5)
      [,1] [,2] [,3] [,4] [,5] [,6]
 [1,]    1    6   11   16   21   26
 [2,]    2    7   12   17   22   27
 [3,]    3    8   13   18   23   28
 [4,]    4    9   14   19   24   29
 [5,]    5   10   15   20   25   30
 [6,]    5   10   15   20   25   30
 [7,]    5   10   15   20   25   30
 [8,]    5   10   15   20   25   30
 [9,]    5   10   15   20   25   30
[10,]    5   10   15   20   25   30
> 
> apad(a,c(5,6),method="mirror")
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
 [1,]    1    6   11   16   21   26   26   21   16    11     6     1
 [2,]    2    7   12   17   22   27   27   22   17    12     7     2
 [3,]    3    8   13   18   23   28   28   23   18    13     8     3
 [4,]    4    9   14   19   24   29   29   24   19    14     9     4
 [5,]    5   10   15   20   25   30   30   25   20    15    10     5
 [6,]    5   10   15   20   25   30   30   25   20    15    10     5
 [7,]    4    9   14   19   24   29   29   24   19    14     9     4
 [8,]    3    8   13   18   23   28   28   23   18    13     8     3
 [9,]    2    7   12   17   22   27   27   22   17    12     7     2
[10,]    1    6   11   16   21   26   26   21   16    11     6     1
> apad(a,c(5,6),method="mirror",post=FALSE)
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
 [1,]   30   25   20   15   10    5    5   10   15    20    25    30
 [2,]   29   24   19   14    9    4    4    9   14    19    24    29
 [3,]   28   23   18   13    8    3    3    8   13    18    23    28
 [4,]   27   22   17   12    7    2    2    7   12    17    22    27
 [5,]   26   21   16   11    6    1    1    6   11    16    21    26
 [6,]   26   21   16   11    6    1    1    6   11    16    21    26
 [7,]   27   22   17   12    7    2    2    7   12    17    22    27
 [8,]   28   23   18   13    8    3    3    8   13    18    23    28
 [9,]   29   24   19   14    9    4    4    9   14    19    24    29
[10,]   30   25   20   15   10    5    5   10   15    20    25    30
> 
> 
> 
> cleanEx()
> nameEx("apl")
> ### * apl
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: apl
> ### Title: Replacements for APL functions take and drop
> ### Aliases: apl take apldrop apltake apldrop<- apltake<-
> ### Keywords: array
> 
> ### ** Examples
> 
> a <- magichypercube.4n(m=1)
> apltake(a,c(2,3,2))
, , 1

     [,1] [,2] [,3]
[1,]   64    5    9
[2,]    2   59   55

, , 2

     [,1] [,2] [,3]
[1,]   17   44   40
[2,]   47   22   26

> apldrop(a,c(1,1,2))
, , 1

     [,1] [,2] [,3]
[1,]   38   42   19
[2,]   39   43   18
[3,]   25   21   48

, , 2

     [,1] [,2] [,3]
[1,]   11    7   62
[2,]   10    6   63
[3,]   56   60    1

> 
> b <- matrix(1:30,5,6)
> apldrop(b,c(1,-2)) <- -1
> 
> b <- matrix(1:110,10,11)
> apltake(b,2) <- -1
> apldrop(b,c(5,-7)) <- -2
> b
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11]
 [1,]   -1   -1   -1   -1   -1   -1   -1   -1   -1    -1    -1
 [2,]   -1   -1   -1   -1   -1   -1   -1   -1   -1    -1    -1
 [3,]    3   13   23   33   43   53   63   73   83    93   103
 [4,]    4   14   24   34   44   54   64   74   84    94   104
 [5,]    5   15   25   35   45   55   65   75   85    95   105
 [6,]   -2   -2   -2   -2   46   56   66   76   86    96   106
 [7,]   -2   -2   -2   -2   47   57   67   77   87    97   107
 [8,]   -2   -2   -2   -2   48   58   68   78   88    98   108
 [9,]   -2   -2   -2   -2   49   59   69   79   89    99   109
[10,]   -2   -2   -2   -2   50   60   70   80   90   100   110
> 
> 
> 
> 
> cleanEx()
> nameEx("aplus")
> ### * aplus
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: aplus
> ### Title: Generalized array addition
> ### Aliases: aplus
> ### Keywords: array
> 
> ### ** Examples
> 
> a <- matrix(1:10,2,5)
> b <- matrix(1:9,3,3)
> aplus(a,b,b)
     [,1] [,2] [,3] [,4] [,5]
[1,]    3   11   19    7    9
[2,]    6   14   22    8   10
[3,]    6   12   18    0    0
>   
> 
> 
> 
> cleanEx()
> nameEx("arev")
> ### * arev
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: arev
> ### Title: Reverses some dimensions; a generalization of rev
> ### Aliases: arev
> ### Keywords: array
> 
> ### ** Examples
> 
> a <- matrix(1:42,6,7)
> arev(a)  #Note swap defaults to TRUE
     [,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,]   42   36   30   24   18   12    6
[2,]   41   35   29   23   17   11    5
[3,]   40   34   28   22   16   10    4
[4,]   39   33   27   21   15    9    3
[5,]   38   32   26   20   14    8    2
[6,]   37   31   25   19   13    7    1
> 
> b <- magichypercube.4n(1,d=4)
> arev(b,c(TRUE,FALSE,TRUE,FALSE))
, , 1, 1

     [,1] [,2] [,3] [,4]
[1,]   52  201  197   64
[2,]  206   55   59  194
[3,]  207   54   58  195
[4,]   49  204  200   61

, , 2, 1

     [,1] [,2] [,3] [,4]
[1,]  221   40   44  209
[2,]   35  218  214   47
[3,]   34  219  215   46
[4,]  224   37   41  212

, , 3, 1

     [,1] [,2] [,3] [,4]
[1,]  237   24   28  225
[2,]   19  234  230   31
[3,]   18  235  231   30
[4,]  240   21   25  228

, , 4, 1

     [,1] [,2] [,3] [,4]
[1,]    4  249  245   16
[2,]  254    7   11  242
[3,]  255    6   10  243
[4,]    1  252  248   13

, , 1, 2

     [,1] [,2] [,3] [,4]
[1,]  141  120  124  129
[2,]  115  138  134  127
[3,]  114  139  135  126
[4,]  144  117  121  132

, , 2, 2

     [,1] [,2] [,3] [,4]
[1,]  100  153  149  112
[2,]  158  103  107  146
[3,]  159  102  106  147
[4,]   97  156  152  109

, , 3, 2

     [,1] [,2] [,3] [,4]
[1,]   84  169  165   96
[2,]  174   87   91  162
[3,]  175   86   90  163
[4,]   81  172  168   93

, , 4, 2

     [,1] [,2] [,3] [,4]
[1,]  189   72   76  177
[2,]   67  186  182   79
[3,]   66  187  183   78
[4,]  192   69   73  180

, , 1, 3

     [,1] [,2] [,3] [,4]
[1,]   77  184  188   65
[2,]  179   74   70  191
[3,]  178   75   71  190
[4,]   80  181  185   68

, , 2, 3

     [,1] [,2] [,3] [,4]
[1,]  164   89   85  176
[2,]   94  167  171   82
[3,]   95  166  170   83
[4,]  161   92   88  173

, , 3, 3

     [,1] [,2] [,3] [,4]
[1,]  148  105  101  160
[2,]  110  151  155   98
[3,]  111  150  154   99
[4,]  145  108  104  157

, , 4, 3

     [,1] [,2] [,3] [,4]
[1,]  125  136  140  113
[2,]  131  122  118  143
[3,]  130  123  119  142
[4,]  128  133  137  116

, , 1, 4

     [,1] [,2] [,3] [,4]
[1,]  244    9    5  256
[2,]   14  247  251    2
[3,]   15  246  250    3
[4,]  241   12    8  253

, , 2, 4

     [,1] [,2] [,3] [,4]
[1,]   29  232  236   17
[2,]  227   26   22  239
[3,]  226   27   23  238
[4,]   32  229  233   20

, , 3, 4

     [,1] [,2] [,3] [,4]
[1,]   45  216  220   33
[2,]  211   42   38  223
[3,]  210   43   39  222
[4,]   48  213  217   36

, , 4, 4

     [,1] [,2] [,3] [,4]
[1,]  196   57   53  208
[2,]   62  199  203   50
[3,]   63  198  202   51
[4,]  193   60   56  205

> 
> 
> 
> cleanEx()
> nameEx("arot")
> ### * arot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: arot
> ### Title: Rotates an array about two specified dimensions
> ### Aliases: arot
> ### Keywords: array
> 
> ### ** Examples
> 
> a <- array(1:16,rep(2,4))
> arot(a)
, , 1, 1

     [,1] [,2]
[1,]    3    4
[2,]    1    2

, , 2, 1

     [,1] [,2]
[1,]    7    8
[2,]    5    6

, , 1, 2

     [,1] [,2]
[1,]   11   12
[2,]    9   10

, , 2, 2

     [,1] [,2]
[1,]   15   16
[2,]   13   14

> arot(a,c(1,3))
 ----------- FAILURE REPORT -------------- 
 --- srcref --- 
 at /var/scratch2/tomas/tmp/Rtmp11BQQt/R.INSTALLd35819b1be3e/magic/R/magic.R#162: 
 --- if/while statement is in package --- 
magic
 --- call (currently evaluated) --- 
arot(a, c(1, 3))
 --- R stacktrace ---
where 1: arot(a, c(1, 3))

 --- value of length: 2 type: logical ---
[1] FALSE FALSE
 --- function (currently evaluated)--- 
function (a, rights=1, pair=1:2) 
{
    d <- dim(a)
    n <- length(d)
    jj <- 1:n
    jj[pair] <- shift(jj[pair],1)
    rights <- rights%%4
    if(rights==0){
      return(a)
    } else if (rights==1){
      return(aperm(arev(a,pair[2]),jj))
    } else if (rights==2){
      return(arev(a,pair))
    } else if (rights==3){
      return(aperm(arev(a,pair[1]),jj))
    } else {
      stop("rights must be one of 0,1,2,3")
    }
}
<environment: namespace:magic>
 --- function (body) search ---
Function arot in namespace magic has this body.
 ----------- END FAILURE REPORT -------------- 
Fatal error: the condition has length > 1 and only the first element will be used XXXXXX
