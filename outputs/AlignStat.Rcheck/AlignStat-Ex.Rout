 --- srcref --- 
 at /tmp/Rtmpkn2Ig3/R.INSTALL5789677ebf57/AlignStat/R/Plots.R#131: 
 --- call (function) --- 
plot_similarity_summary(PAC, CS = TRUE, cys = TRUE)
 --- stacktrace ---
where 1: plot_similarity_summary(PAC, CS = TRUE, cys = TRUE)

 --- value of length: 2 type: logical ---
columnwise.column.score            column.score 
                   TRUE                    TRUE 
 --- function --- 
function(x, scale=TRUE, CS=FALSE, cys=FALSE, display=TRUE){
  
  identity       <- x$results_R[1,]
  if (scale){
    identity       <- x$results_R[1,]/(1-x$results_R[2,]) # Similarity, excluding conserved gaps
  }
  proportion_cys <- 0.2*(x$cys)-0.2
  if ( !is.na(x$column_score) ){
    columnwise.CS  <- x$column_score$columnwise.column.score==1
    sum.CS         <- x$column_score$column.score
  } else {
    columnwise.CS <- FALSE
    sum.CS <-  NA
  }
  score          <- x$similarity_score
  col            <- 1:ncol(x$results)
  plot_data      <- data.frame(Identity=identity,columnwise.CS=columnwise.CS,PropCys=proportion_cys,Position=col)

  p <- ggplot2::ggplot(plot_data,ggplot2::aes(x=Position))                 +
       ggplot2::geom_line(ggplot2::aes(y=identity,colour="Similarity"))    +
       ggplot2::labs(x = "Reference MSA column", y = "Proportion")         +
       ggplot2::scale_x_continuous(expand = c(0, 0))                       +
       ggplot2::scale_y_continuous(expand = c(0, 0),breaks=seq(0,1,1/10))  +
       ggplot2::theme_classic()                                            +
       ggplot2::theme(legend.title = ggplot2::element_text(face = "bold")) +
       ggplot2::scale_colour_discrete(breaks=c("Similarity","Cysteines"),
                                      name=paste("Score =",percent(score),
                                                 "\nCS score =",percent(sum.CS)))
  
  if(cys) {
    p  <- p + ggplot2::geom_line(ggplot2::aes(y=PropCys,colour="Cysteines")) +
              ggplot2::geom_line(ggplot2::aes(y=0))                          +
              ggplot2::geom_line(ggplot2::aes(y=0))
  }
  
  if(CS) {
    cs_data <- plot_data[which(plot_data$columnwise.CS),]
    if ( nrow(cs_data)>0){
      p  <- p + ggplot2::geom_point(data=cs_data, ggplot2::aes(y=0)) 
    }
  }
  
  if (display){
    print(p)
  }
  p
}
<environment: namespace:AlignStat>
 --- function (body) search ---
Function plot_similarity_summary in namespace AlignStat has this body.
