
R Under development (unstable) (2018-01-22 r74151) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "speciesgeocodeR"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('speciesgeocodeR')
Loading required package: maps
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("CalcRange")
> ### * CalcRange
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: CalcRange
> ### Title: Calculate the Extent of Occurrence
> ### Aliases: CalcRange
> ### Keywords: spatial
> 
> ### ** Examples
> 
> data(lemurs)
> CalcRange(lemurs)
Warning in CalcRange(lemurs) :
  177 points were excluded due to duplicated coordinate
Warning in CalcRange(lemurs) :
  the following species have less than 3 occurrence, values set to NA:
 Daubentonia madagascariensis
 Eulemur collaris
 Eulemur rufifrons
 Eulemur rufus
 Eulemur sanfordi
 Lepilemur septentrionalis
 Microcebus griseorufus
 Microcebus lehilahytsara
 Microcebus ravelobensis
 Propithecus candidus
 Propithecus coronatus
 Propithecus deckenii
 Propithecus tattersalli
 ----------- FAILURE REPORT -------------- 
 --- srcref --- 
 at /var/scratch2/tomas/tmp/RtmpTGeeHM/R.INSTALLaf09489d496a/speciesgeocodeR/R/CalcRange.R#31: 
 --- if/while statement is in package --- 
speciesgeocodeR
 --- call (currently evaluated) --- 
CalcRange(lemurs)
 --- R stacktrace ---
where 1: CalcRange(lemurs)

 --- value of length: 2 type: logical ---
[1]  TRUE FALSE
 --- function (currently evaluated)--- 
function(x, mode = "EOO", value = c("area", "shape")) {
    if (class(x) == "spgeoOUT"){
      dat1 <- data.frame(identifier = x$identifier_in, x$species_coordinates_in)
    }else{
      dat1 <- x[, 1:3]
      names(dat1) <- c("identifier", "XCOOR", "YCOOR")
    }
    dat <- unique(dat1)
    if (!is.factor(dat[, 1]) | !is.numeric(dat[, 2]) | !is.numeric(dat[, 3])) {
        stop("wrong input format, x must be a data.frame with three columns: speciesname, longitude, latitude.\n")
    }
    if (max(dat[, 2]) > 180 | min(dat[, 2]) < -180 | max(dat[, 3]) > 90 | min(dat[, 3]) < -90) {
        stop("invallid input coordinates. Check for column order and valid coordinates.")
    }
    if (!dim(dat)[1] == dim(dat1)[1]) {
        warning((dim(dat1)[1] - dim(dat)[1]), " points were excluded due to duplicated coordinate")
    }
    filt <- tapply(dat$XCOOR, dat$identifier, length)
    filterd <- filt[filt > 2]
    dat$identifier <- as.character(dat$identifier)
    dat.filt <- subset(dat, dat$identifier %in% as.character(names(filterd)))
    
    sortout <- filt[filt <= 2]
    if (length(sortout) > 0) {
        warning("the following species have less than 3 occurrence, values set to NA:", paste("\n", names(sortout)))
    }
    
    inp <- split(dat.filt, f = dat.filt$identifier)
    
    if (mode == "EOO") {
      if (value == "area"){
          out <- lapply(inp, function(x) .eoo(x))
          out <- data.frame(do.call("rbind", out))
          names(out) <- "EOO"
          out <- rbind(out, data.frame(row.names = rownames(sortout), EOO = rep("NA", length(sortout))))
          return(out)
      }
    }
    if(value == "shape"){
      out <- lapply(inp, function(x) .ConvHull (x))
      return(out)
    }
}
<environment: namespace:speciesgeocodeR>
 --- function (body) search ---
Function CalcRange in namespace speciesgeocodeR has this body.
 ----------- END FAILURE REPORT -------------- 
Fatal error: the condition has length > 1 and only the first element will be used XXXXXX
