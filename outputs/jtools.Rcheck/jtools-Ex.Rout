
R Under development (unstable) (2018-01-22 r74151) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "jtools"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('jtools')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cat_plot")
> ### * cat_plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cat_plot
> ### Title: Plot interaction effects between categorical predictors.
> ### Aliases: cat_plot
> 
> ### ** Examples
> 
> 
> library(ggplot2)
> fit <- lm(price ~ cut * color, data = diamonds)
> cat_plot(fit, pred = color, modx = cut, interval = TRUE)
> 
> # 3-way interaction
> 
> ## Will first create a couple dichotomous factors to ensure full rank
> mpg2 <- mpg
> mpg2$auto <- "auto"
> mpg2$auto[mpg2$trans %in% c("manual(m5)", "manual(m6)")] <- "manual"
> mpg2$fwd <- "2wd"
> mpg2$fwd[mpg2$drv == "4"] <- "4wd"
> ## Drop the two cars with 5 cylinders (rest are 4, 6, or 8)
> mpg2 <- mpg2[mpg2$cyl != "5",]
> ## Fit the model
> fit3 <- lm(cty ~ cyl * fwd * auto, data = mpg2)
> 
> # The line geom looks good for an ordered factor predictor
> cat_plot(fit3, pred = cyl, modx = fwd, mod2 = auto, geom = "line",
+  interval = TRUE)
> 
> 
> 
> 
> cleanEx()

detaching ‘package:ggplot2’

> nameEx("center_lm")
> ### * center_lm
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: center_lm
> ### Title: Center variables in fitted regression models
> ### Aliases: center_lm
> 
> ### ** Examples
> 
> 
> fit <- lm(formula = Murder ~ Income * Illiteracy,
+           data = as.data.frame(state.x77))
> fit_center <- center_lm(fit)
> 
> # With weights
> fitw <- lm(formula = Murder ~ Income * Illiteracy,
+            data = as.data.frame(state.x77),
+            weights = Population)
> fitw_center <- center_lm(fitw)
 ----------- FAILURE REPORT -------------- 
 --- srcref --- 
 at /var/scratch2/tomas/tmp/RtmpbTXAEm/R.INSTALL60134144d986/jtools/R/gscale.R#285: 
 --- if/while statement is in package --- 
jtools
 --- call (currently evaluated) --- 
withCallingHandlers(expr, warning = function(w) invokeRestart("muffleWarning"))
 --- R stacktrace ---
where 1: withCallingHandlers(expr, warning = function(w) invokeRestart("muffleWarning"))
where 2 at /var/scratch2/tomas/tmp/RtmpbTXAEm/R.INSTALL60134144d986/jtools/R/gscale.R#285: suppressWarnings({
    if (wname %in% names(d)) {
        weights <- d[[wname]]
    }
    else if (wname2 %in% names(d)) {
        weights <- d[[wname2]]
    }
})
where 3: gscale(x = vars, data = mf, binary.inputs = binary.inputs, n.sd = n.sd, 
    weights = the_weights, scale.only = !center, center.only = center.only)
where 4 at /var/scratch2/tomas/tmp/RtmpbTXAEm/R.INSTALL60134144d986/jtools/R/scale_lm.R#350: scale_lm(model, binary.inputs = binary.inputs, scale.response = center.response, 
    center.only = TRUE)
where 5: center_lm(fitw)

 --- value of length: 50 type: logical ---
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[49] FALSE FALSE
 --- function (currently evaluated)--- 
function (expr, ...) 
{
    handlers <- list(...)
    classes <- names(handlers)
    parentenv <- parent.frame()
    if (length(classes) != length(handlers)) 
        stop("bad handler specification")
    .Internal(.addCondHands(classes, handlers, parentenv, NULL, 
        TRUE))
    expr
}
<bytecode: 0x15ffb20>
<environment: namespace:base>
 --- function (body) search ---
Function withCallingHandlers in namespace base has this body.
 ----------- END FAILURE REPORT -------------- 
Fatal error: the condition has length > 1 and only the first element will be used XXXXXX
